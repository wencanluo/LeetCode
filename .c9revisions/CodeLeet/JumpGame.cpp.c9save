{"ts":1375428005819,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*Jump GameMar 25 '125618 / 13186\r\nGiven an array of non-negative integers, you are initially positioned at the first index of the array.\r\n\r\nEach element in the array represents your maximum jump length at that position.\r\n\r\nDetermine if you are able to reach the last index.\r\n\r\nFor example:\r\nA = [2,3,1,1,4], return true.\r\n\r\nA = [3,2,1,0,4], return false.\r\n\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 08/01/2013\r\n*/\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n#include<climits>\r\n\r\n#include<vector>\r\n#include<string>\r\n#include<algorithm>\r\n\r\n#include<map>\r\n//#include<unordered_set>\r\n\r\n#include<queue>\r\n#include<set>\r\n\r\n// Definition for binary tree\r\n struct TreeNode {\r\n     int val;\r\n     TreeNode *left;\r\n     TreeNode *right;\r\n TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n};\r\n\r\n//Definition for singly-linked list.\r\nstruct ListNode {\r\n    int val;\r\n    ListNode *next;\r\n    ListNode(int x) : val(x), next(NULL) {}\r\n};\r\n\r\n// Definition for an interval.\r\nstruct Interval {\r\n    int start;\r\n    int end;\r\n    Interval() : start(0), end(0) {}\r\n    Interval(int s, int e) : start(s), end(e) {}\r\n};\r\n\r\nclass Solution {\r\npublic:\r\n    bool canJump(int A[], int n) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        if(n==0) return true;\r\n        \r\n        int k=0;\r\n        while(1){\r\n            if(k>=n-1) return true;\r\n            \r\n            int next = A[k];\r\n            if(next == 0) break;\r\n                        \r\n            int nextMax = 0;\r\n            for(int i=k+1;i<=next+k && i<n;i++){\r\n                nextMax = max(nextMax, A[i]+i);\r\n            }\r\n            k = nextMax;\r\n        }\r\n        \r\n        return false;\r\n    }\r\n};\r\n\r\nvoid main(){\r\n\tSolution s;\r\n\r\n\tsystem(\"pause\");\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1765}]],"length":1765}
{"contributors":[],"silentsave":false,"ts":1375428211022,"patch":[[{"diffs":[[0,"    "],[-1,"int k=0;\r\n        while(1){\r\n            if(k>=n-1) return true;\r\n            \r\n            int next = A[k];\r\n            if(next == 0) break;\r\n                        \r\n            int nextMax = 0;\r\n            for(int i=k+1;i<=next+k && i<n;i++){\r\n                nextMax = max(nextMax, A[i]+i);"],[1,"for(int i=0;i<n;i++){\r\n            "],[0,"\r\n  "]],"start1":1312,"start2":1312,"length1":305,"length2":43},{"diffs":[[0,"  \r\n        "],[-1,"    "],[0,"}\r\n         "]],"start1":1349,"start2":1349,"length1":28,"length2":24},{"diffs":[[0,"    "],[-1," "],[-1,"    k = nextMax;\r\n        }"],[0,"\r\n  "]],"start1":1367,"start2":1367,"length1":36,"length2":8}]],"length":1471,"saved":false}
{"ts":1375428222608,"patch":[[{"diffs":[[0,"rue;\r\n        \r\n"],[1,"        int maxK = 0;\r\n"],[0,"        for(int "]],"start1":1292,"start2":1292,"length1":32,"length2":55}]],"length":1494,"saved":false}
{"ts":1375428247864,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"if(maxK < A[i] + i){\r\n                maxK = A[i] + i;\r\n            }"],[0,"\r\n        }\r\n   "]],"start1":1358,"start2":1358,"length1":32,"length2":101}]],"length":1563,"saved":false}
{"ts":1375428379830,"patch":[[{"diffs":[[0," i=0;i<n"],[1," && i <= maxK"],[0,";i++){\r\n"]],"start1":1346,"start2":1346,"length1":16,"length2":29},{"diffs":[[0,"  }\r\n       "],[1," "],[0,"\r\n        \r\n"]],"start1":1464,"start2":1464,"length1":24,"length2":25},{"diffs":[[0,"      \r\n        "],[1,"if(maxK >= n-1) return true;       "],[0,"\r\n        return"]],"start1":1471,"start2":1471,"length1":32,"length2":67}]],"length":1612,"saved":false}
