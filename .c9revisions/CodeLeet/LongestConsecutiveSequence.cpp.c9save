{"ts":1375462501920,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*Longest Consecutive Sequence\r\nGiven an unsorted array of integers, find the length of the longest consecutive elements sequence.\r\nFor example,\r\nGiven [100, 4, 200, 1, 3, 2],\r\nThe longest consecutive elements sequence is [1, 2, 3, 4]. Return its length: 4.\r\n\r\nYour algorithm should run in O(n) complexity.\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 06/05/2013\r\n*/\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n\r\n#include<vector>\r\n#include<string>\r\n#include<algorithm>\r\n\r\n#include<map>\r\n\r\nclass Solution {\r\npublic:\r\n    int longestConsecutive(vector<int> &num) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n\t\tif(num.size() == 0) return 0;\r\n\t\tint res = 0;\r\n\r\n        map<int,int> A;\r\n\t\tfor(vector<int>::iterator it = num.begin();it<num.end();it++){\r\n\t\t\tA[*it] = 0;\r\n\t\t}\r\n\r\n\t\tfor(vector<int>::iterator it = num.begin();it<num.end();it++){\r\n\t\t\tif(A[*it] == 1) continue;\r\n\t\t\t\r\n\t\t\tint v = *it;\r\n\t\t\tA[v] = 1;\r\n\t\t\t\r\n\t\t\tint count = 1;\r\n\r\n\t\t\tint k = v+1;\r\n\t\t\twhile(A.find(k) != A.end()){\r\n\t\t\t\tA[k] = 1;\r\n\t\t\t\tk++;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\r\n\t\t\tk = v-1;\r\n\t\t\twhile(A.find(k) != A.end()){\r\n\t\t\t\tA[k] = 1;\r\n\t\t\t\tk--;\r\n\t\t\t\tcount++;\r\n\t\t\t}\r\n\r\n\t\t\tif(count > res){\r\n\t\t\t\tres = count;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn res;\r\n    }\r\n};\r\n\r\nvoid main(){\r\n\tSolution s;\r\n\t\r\n\tint a[] = {100, 4, 200, 1, 3, 2};\r\n\tvector<int> vec(a, a+sizeof(a)/sizeof(a[0]));\r\n\tcout << s.longestConsecutive(vec) << endl;\r\n\r\n\t//system(\"pause\");\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1437}]],"length":1437}
