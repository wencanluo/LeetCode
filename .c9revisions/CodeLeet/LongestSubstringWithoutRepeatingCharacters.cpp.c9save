{"ts":1376942896053,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*Climbing StairsApr 3 '125183 / 9882\r\nYou are climbing a stair case. It takes n steps to reach to the top.\r\n\r\nEach time you can either climb 1 or 2 steps. In how many distinct ways can you climb to the top?\r\n\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 07/29/2013\r\n*/\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n\r\n#include<vector>\r\n#include<string>\r\n#include<algorithm>\r\n\r\n#include<map>\r\n//#include<unordered_set>\r\n\r\n#include<queue>\r\n#include<set>\r\n#include<stack>\r\n\r\n// Definition for binary tree\r\n struct TreeNode {\r\n     int val;\r\n     TreeNode *left;\r\n     TreeNode *right;\r\n TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n};\r\n \r\nclass Solution {\r\npublic:\r\n    int climbStairs(int n) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        if(n<=0) return 0;\r\n\t\tif(n==1) return 1;\r\n\t\tif(n==2) return 2;\r\n\r\n\t\tint Fn,Fn1=1,Fn2=2;\r\n\r\n\t\tfor(int i=3;i<=n;i++){\r\n\t\t\tFn=Fn1+Fn2;\r\n\t\t\tFn1=Fn2;\r\n\t\t\tFn2=Fn;\r\n\t\t}\r\n\t\treturn Fn;\r\n    }\r\n};\r\n\r\nvoid main(){\r\n\tSolution s;\r\n\t\r\n\t//cout << s.simplifyPath(\"/a/./b/../../c/\") << endl;\r\n\tcout << s.climbStairs(4) << endl;\r\n\r\n\tsystem(\"pause\");\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1138}]],"length":1138}
{"contributors":[],"silentsave":false,"ts":1376942904844,"patch":[[{"diffs":[[0,"/*"],[-1,"Climbing StairsApr 3 '125183 / 9882\r\nYou are climbing a stair case. It takes n steps to reach to the top.\r\n\r\nEach time you can either climb 1 or 2 steps. In how many di"],[1,"Longest Substring Without Repeating CharactersMay 16 '1110376 / 31404\r\nGiven a string, find the length of the longest substring without repeating characters. For example, the longest substring without repeating letters for \"abcabcbb\" is \"abc\", which the length is 3. For \"bbbbb\" the longest sub"],[0,"st"],[1,"r"],[0,"in"],[-1,"ct ways can you climb to the top?"],[1,"g is \"b\", with the length of 1."],[0,"\r\n\r\n"]],"start1":0,"start2":0,"length1":211,"length2":336}]],"length":1263,"saved":false}
{"ts":1376942911186,"patch":[[{"diffs":[[0,"\nDate: 0"],[-1,"7"],[1,"8"],[0,"/29/2013"]],"start1":370,"start2":370,"length1":17,"length2":17}]],"length":1263,"saved":false}
{"ts":1376942913814,"patch":[[{"diffs":[[0,"ate: 08/"],[-1,"2"],[1,"1"],[0,"9/2013\r\n"]],"start1":372,"start2":372,"length1":17,"length2":17}]],"length":1263,"saved":false}
{"ts":1376942925050,"patch":[[{"diffs":[[0,"int "],[-1,"climbStairs(int n"],[1,"lengthOfLongestSubstring(string s"],[0,") {\r"]],"start1":797,"start2":797,"length1":25,"length2":41},{"diffs":[[0,"on\r\n"],[1,""],[0,"        "],[-1,"if(n<=0) return 0;\r\n\t\tif(n==1) return 1;\r\n\t\tif(n==2) return 2;\r\n\r\n\t\tint Fn,Fn1=1,Fn2=2;\r\n\r\n\t\tfor(int i=3;i<=n;i++){\r\n\t\t\tFn=Fn1+Fn2;\r\n\t\t\tFn1=Fn2;\r\n\t\t\tFn2=Fn;\r\n\t\t}\r\n\t\treturn Fn;"],[0,"\r\n  "]],"start1":931,"start2":931,"length1":191,"length2":16}]],"length":1104,"saved":false}
{"ts":1376942939925,"patch":[[{"diffs":[[0,"nction\r\n"],[1,"        stack<char> Q;\r\n        \r\n"],[0,"        "]],"start1":927,"start2":927,"length1":16,"length2":50}]],"length":1138,"saved":false}
{"ts":1376942957405,"patch":[[{"diffs":[[0,"ar> Q;\r\n"],[1,"        map<char, int> M;\r\n        \r\n"],[0,"        "]],"start1":951,"start2":951,"length1":16,"length2":53}]],"length":1175,"saved":false}
{"ts":1376943021764,"patch":[[{"diffs":[[0,"    "],[-1,"stack<char> Q;\r\n        map<char, int> M"],[1,"int n = s.size();\r\n        if(n<=1) return n;\r\n        \r\n        stack<char> Q;\r\n        map<char, int> M;\r\n        \r\n        int k = 0;\r\n        Q.push_back(s[k]);\r\n        M[s[k]] = 1"],[0,";\r\n "]],"start1":939,"start2":939,"length1":48,"length2":193}]],"length":1320,"saved":false}
{"ts":1376943029941,"patch":[[{"diffs":[[0,"      \r\n        "],[1,"while(k < n){\r\n            \r\n        }"],[0,"\r\n        \r\n    "]],"start1":1133,"start2":1133,"length1":32,"length2":70}]],"length":1358,"saved":false}
{"ts":1376943097403,"patch":[[{"diffs":[[0,"= 1;\r\n        \r\n"],[1,"        k++;\r\n"],[0,"        while(k "]],"start1":1125,"start2":1125,"length1":32,"length2":46},{"diffs":[[0,"){\r\n            "],[1,"char c = s[k];\r\n            if(M.find(c) == M.end()){\r\n                \r\n            }"],[0,"\r\n        }\r\n   "]],"start1":1174,"start2":1174,"length1":32,"length2":118}]],"length":1458,"saved":false}
{"ts":1376943115477,"patch":[[{"diffs":[[0," M.end()){\r\n"],[1,"                M[c] = 1;\r\n            }else{\r\n"],[0,"            "]],"start1":1233,"start2":1233,"length1":24,"length2":71}]],"length":1505,"saved":false}
{"ts":1376943151173,"patch":[[{"diffs":[[0,"                "],[1,"if(M[c] == 0){\r\n                    M[c] = 1;\r\n                }else{\r\n                    \r\n                }"],[0,"\r\n            }\r"]],"start1":1292,"start2":1292,"length1":32,"length2":142}]],"length":1615,"saved":false}
{"ts":1376943178327,"patch":[[{"diffs":[[0," M.end()"],[-1,""],[0,""],[1," || M[c] == 0"],[0,"){\r\n    "]],"start1":1233,"start2":1233,"length1":16,"length2":29},{"diffs":[[0,"    "],[-1,"}else{\r\n                if(M[c] == 0){\r\n                    M[c] = 1;\r\n   "],[1,"    Q.push_back(c);\r\n"],[0,"    "]],"start1":1293,"start2":1293,"length1":82,"length2":29},{"diffs":[[0,"        "],[-1," "],[0,"}else{\r\n"]],"start1":1322,"start2":1322,"length1":17,"length2":16},{"diffs":[[0,"    "],[-1,"    \r\n                }"],[0,"\r\n  "]],"start1":1350,"start2":1350,"length1":31,"length2":8}]],"length":1551,"saved":false}
{"ts":1376943195540,"patch":[[{"diffs":[[0,"        "],[-1,"stack"],[1,"queue"],[0,"<char> Q"]],"start1":1000,"start2":1000,"length1":21,"length2":21}]],"length":1551,"saved":false}
{"ts":1376943249604,"patch":[[{"diffs":[[0,"= 1;\r\n        \r\n"],[1,"        \r\n        int count = 1;\r\n"],[0,"        k++;\r\n  "]],"start1":1125,"start2":1125,"length1":32,"length2":66}]],"length":1585,"saved":false}
{"ts":1376943270007,"patch":[[{"diffs":[[0,"      \r\n        "],[1,"int maxCount = 1;"],[0,"\r\n        int co"]],"start1":1133,"start2":1133,"length1":32,"length2":49},{"diffs":[[0,"int count = 1;\r\n"],[1,"        \r\n"],[0,"        k++;\r\n  "]],"start1":1176,"start2":1176,"length1":32,"length2":42}]],"length":1612,"saved":false}
{"ts":1376943289108,"patch":[[{"diffs":[[0,"h_back(c);\r\n"],[1,"                count++;\r\n                maxCount = max(maxCount, count);\r\n"],[0,"            "]],"start1":1367,"start2":1367,"length1":24,"length2":100}]],"length":1688,"saved":false}
{"ts":1376943347228,"patch":[[{"diffs":[[0,"                "],[1,"while(!Q.empty()){\r\n                    \r\n                }"],[0,"\r\n            }\r"]],"start1":1475,"start2":1475,"length1":32,"length2":91}]],"length":1747,"saved":false}
{"ts":1376943393383,"patch":[[{"diffs":[[0,"                "],[1,"char t = Q.front();\r\n                    if(t == c){\r\n                        \r\n                    }\r\n                    Q.pop();"],[0,"\r\n              "]],"start1":1515,"start2":1515,"length1":32,"length2":163}]],"length":1878,"saved":false}
{"ts":1376943968616,"patch":[[{"diffs":[[0,"  Q.push"],[-1,"_back"],[0,""],[1,""],[0,"(s[k]);\r"]],"start1":1087,"start2":1087,"length1":21,"length2":16},{"diffs":[[0,"push"],[-1,"_back"],[0,""],[1,""],[0,"(c);"]],"start1":1359,"start2":1359,"length1":13,"length2":8},{"diffs":[[0,"    "],[-1,"                if(t == c){\r\n                        \r\n                    }\r\n                    Q.pop();\r\n                }"],[1,"\t\t\t\tQ.pop();\r\n\r\n\t\t\t\t\tcount--;\r\n\t\t\t\t\tM[t]--;\r\n\t\t\t\t\tif(t == c) break;\r\n                }\r\n\t\t\t\tQ.push(c);\r\n                count++;\r\n\t\t\t\tM[c]++;"],[0,"\r\n  "]],"start1":1542,"start2":1542,"length1":133,"length2":149},{"diffs":[[0,"\n            }\r\n"],[1,"\t\t\tk++;\r\n"],[0,"        }\r\n     "]],"start1":1688,"start2":1688,"length1":32,"length2":41},{"diffs":[[0,"     }\r\n"],[1,"\r\n"],[0,"        "],[1,"return maxCount;"],[0,"\r\n    }\r"]],"start1":1716,"start2":1716,"length1":24,"length2":42},{"diffs":[[0,"s;\r\n\t\r\n\t"],[-1,"//"],[0,"cout << "]],"start1":1789,"start2":1789,"length1":18,"length2":16},{"diffs":[[0,"< s."],[-1,"simplifyPath(\"/a/./b/../../c/\") << endl;\r\n\tcout << s.climbStairs(4"],[1,"lengthOfLongestSubstring(\"ababc\""],[0,") <<"]],"start1":1803,"start2":1803,"length1":74,"length2":40}]],"length":1875,"saved":false}
