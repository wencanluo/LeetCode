{"ts":1376584646860,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*Longest Common PrefixJan 17 '125821 / 16194\r\nWrite a function to find the longest common prefix string amongst an array of strings.\r\n\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 08/14/2013\r\n*/\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n#include<climits>\r\n\r\n#include<vector>\r\n#include<string>\r\n#include<algorithm>\r\n#include<sstream>\r\n#include<stack>\r\n#include<map>\r\n//#include<unordered_set>\r\n\r\n#include<queue>\r\n#include<set>\r\n\r\n// Definition for binary tree\r\n struct TreeNode {\r\n     int val;\r\n     TreeNode *left;\r\n     TreeNode *right;\r\n TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n};\r\n\r\n//Definition for singly-linked list.\r\nstruct ListNode {\r\n    int val;\r\n    ListNode *next;\r\n    ListNode(int x) : val(x), next(NULL) {}\r\n};\r\n\r\nclass Solution {\r\npublic:\r\n    string longestCommonPrefix(vector<string> &strs) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        string r = \"\";\r\n\r\n\t\tint n=strs.size();\r\n\t\tif(n == 0) return r;\r\n\t\tif(n == 1) return strs[0];\r\n\t\tfor(int i=0;i<strs[0].size();i++){\r\n\t\t\tchar c = strs[0][i];\r\n\r\n\t\t\tbool found = true;\r\n\t\t\tfor(int j=1;j<n;j++){\r\n\t\t\t\tif(strs[j].size() < i+1 || strs[j][i] != c){\r\n\t\t\t\t\tfound = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!found) break;\r\n\t\t\tr += c;\r\n\t\t}\r\n\r\n\t\treturn r;\r\n    }\r\n};\r\n\r\nvoid main(){\r\n    Solution s;\r\n\r\n\tsystem(\"pause\");\r\n}\r\n\r\n\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1367}]],"length":1367}
{"contributors":[],"silentsave":false,"ts":1376584655353,"patch":[[{"diffs":[[0,"/*"],[-1,"Longest Common PrefixJan 17 '125821 / 16194\r\nWrite a function to find the longest common prefix string amongst an array of strings"],[1,"Median of Two Sorted ArraysMar 28 '116654 / 33995\r\nThere are two sorted arrays A and B of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n))"],[0,".\r\n\r"]],"start1":0,"start2":0,"length1":136,"length2":219}]],"length":1450,"saved":false}
{"ts":1376584657739,"patch":[[{"diffs":[[0,"te: 08/1"],[-1,"4"],[1,"5"],[0,"/2013\r\n*"]],"start1":257,"start2":257,"length1":17,"length2":17}]],"length":1450,"saved":false}
{"ts":1376584670856,"patch":[[{"diffs":[[0,"    "],[-1,"string longestCommonPrefix(vector<string> &strs"],[1,"double findMedianSortedArrays(int A[], int m, int B[], int n"],[0,") {\r"]],"start1":855,"start2":855,"length1":55,"length2":68},{"diffs":[[0,"on\r\n"],[1,""],[0,"        "],[-1,"string r = \"\";\r\n\r\n\t\tint n=strs.size();\r\n\t\tif(n == 0) return r;\r\n\t\tif(n == 1) return strs[0];\r\n\t\tfor(int i=0;i<strs[0].size();i++){\r\n\t\t\tchar c = strs[0][i];\r\n\r\n\t\t\tbool found = true;\r\n\t\t\tfor(int j=1;j<n;j++){\r\n\t\t\t\tif(strs[j].size() < i+1 || strs[j][i] != c){\r\n\t\t\t\t\tfound = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!found) break;\r\n\t\t\tr += c;\r\n\t\t}\r\n\r\n\t\treturn r;"],[0,"\r\n  "]],"start1":1016,"start2":1016,"length1":375,"length2":16}]],"length":1104,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376699314376,"patch":[[{"diffs":[[0,"      \r\n"],[1,"        \r\n"],[0,"    }\r\n}"]],"start1":1022,"start2":1022,"length1":16,"length2":26}]],"length":1114,"saved":false}
{"ts":1376699327890,"patch":[[{"diffs":[[0,"\n    }\r\n"],[1,"    \r\n    double findMedianSortedArrays(int A[], int m, int B[], int n) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        \r\n        \r\n    }\r\n"],[0,"};\r\n\r\nvo"]],"start1":1039,"start2":1039,"length1":16,"length2":214}]],"length":1312,"saved":false}
{"ts":1376699329952,"patch":[[{"diffs":[[0,"dianSortedArrays"],[1,"Rec"],[0,"(int A[], int m,"]],"start1":872,"start2":872,"length1":32,"length2":35}]],"length":1315,"saved":false}
{"ts":1376699344043,"patch":[[{"diffs":[[0,"on\r\n        "],[-1,"\r\n        "],[1,"return findMedianSortedArraysRec(A, 0, m, B, 0, n)"],[0,"\r\n    }\r\n};\r"]],"start1":1217,"start2":1217,"length1":34,"length2":74}]],"length":1355,"saved":false}
{"ts":1376699357525,"patch":[[{"diffs":[[0,"ec(int A[], int "],[-1,"m"],[1,"begin, int end"],[0,", int B[], int n"]],"start1":889,"start2":889,"length1":33,"length2":46},{"diffs":[[0,"d, int B[], int "],[-1,"n"],[1,"begin, int end"],[0,") {\r\n        // "]],"start1":918,"start2":918,"length1":33,"length2":46}]],"length":1381,"saved":false}
{"ts":1376699504367,"patch":[[{"diffs":[[0," B, 0, n"],[1,", "],[0,")\r\n    }"]],"start1":1296,"start2":1296,"length1":16,"length2":18}]],"length":1383,"saved":false}
{"ts":1376699519197,"patch":[[{"diffs":[[0,"ublic:\r\n"],[1,"\r\n"],[0,"    doub"]],"start1":847,"start2":847,"length1":16,"length2":18}]],"length":1385,"saved":false}
{"ts":1376699520337,"patch":[[{"diffs":[[0,"ublic:\r\n"],[1,"    \r\n    "],[0,"\r\n    do"]],"start1":847,"start2":847,"length1":16,"length2":26}]],"length":1395,"saved":false}
{"ts":1376699539406,"patch":[[{"diffs":[[0,"lic:\r\n    \r\n"],[1,"    int binarySearch(int A[], int begin, int end, int V){\r\n        \r\n    }\r\n"],[0,"    \r\n    do"]],"start1":849,"start2":849,"length1":24,"length2":100}]],"length":1471,"saved":false}
{"ts":1376699543969,"patch":[[{"diffs":[[0,"ublic:\r\n"],[-1,"    \r\n"],[0,"    int "]],"start1":847,"start2":847,"length1":22,"length2":16}]],"length":1465,"saved":false}
{"ts":1376699563827,"patch":[[{"diffs":[[0,", int V){\r\n "],[1,"      if(begin >= end) return -1;\r\n"],[0,"       \r\n   "]],"start1":903,"start2":903,"length1":24,"length2":59}]],"length":1500,"saved":false}
{"ts":1376699575508,"patch":[[{"diffs":[[0,"-1;\r\n       "],[1,"if(begin +1 == end){\r\n           \r\n       }"],[0,"\r\n    }\r\n   "]],"start1":945,"start2":945,"length1":24,"length2":67}]],"length":1543,"saved":false}
{"ts":1376699607069,"patch":[[{"diffs":[[0,"d){\r\n           "],[1,"if(A[begin] == V) return begin;\r\n           return -1;\r\n       }\r\n       \r\n       int mid = (begin+end)/2;"],[0,"\r\n       }\r\n    "]],"start1":974,"start2":974,"length1":32,"length2":138},{"diffs":[[0,"/2;\r\n       "],[-1,"}"],[0,"\r\n    }\r\n   "]],"start1":1093,"start2":1093,"length1":25,"length2":24}]],"length":1648,"saved":false}
{"ts":1376699619038,"patch":[[{"diffs":[[0,"/2;\r\n       "],[1,"while(begin < end){\r\n           \r\n       }"],[0,"\r\n    }\r\n   "]],"start1":1093,"start2":1093,"length1":24,"length2":66}]],"length":1690,"saved":false}
{"ts":1376699625144,"patch":[[{"diffs":[[0,"\r\n       }\r\n"],[1,"       \r\n       return -1;\r\n"],[0,"    }\r\n    \r"]],"start1":1137,"start2":1137,"length1":24,"length2":52}]],"length":1718,"saved":false}
{"ts":1376699641650,"patch":[[{"diffs":[[0,"(begin < end){\r\n"],[1,"           if(A[mid] == V) return mid;\r\n"],[0,"           \r\n   "]],"start1":1110,"start2":1110,"length1":32,"length2":72}]],"length":1758,"saved":false}
{"ts":1376699650869,"patch":[[{"diffs":[[0,"id;\r\n           "],[1,"if(A[mid] < V){\r\n            \r\n           }"],[0,"\r\n       }\r\n    "]],"start1":1161,"start2":1161,"length1":32,"length2":75}]],"length":1801,"saved":false}
{"ts":1376699651908,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\r\n           }\r\n"]],"start1":1190,"start2":1190,"length1":32,"length2":36}]],"length":1805,"saved":false}
{"ts":1376699653598,"patch":[[{"diffs":[[0,"            "],[-1,"    "],[0,"\r\n          "]],"start1":1194,"start2":1194,"length1":28,"length2":24}]],"length":1801,"saved":false}
{"ts":1376699658702,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\r\n           }\r\n"]],"start1":1190,"start2":1190,"length1":32,"length2":36}]],"length":1805,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377022017349,"patch":[[{"diffs":[[0,"n s;\r\n\r\n"],[1,"    int a[] = {1,2,3};\r\n    vector<int> v(a, a+sizeof(a)/sizeof(a[0]));\r\n    \r\n"],[0,"\tsystem("]],"start1":1769,"start2":1769,"length1":16,"length2":95}]],"length":1884,"saved":false}
{"ts":1377022023569,"patch":[[{"diffs":[[0,"= {1,2,3"],[1,",4,6"],[0,"};\r\n    "]],"start1":1789,"start2":1789,"length1":16,"length2":20}]],"length":1888,"saved":false}
{"ts":1377022025385,"patch":[[{"diffs":[[0,"1,2,3,4,"],[-1,"6"],[1,"5"],[0,"};\r\n    "]],"start1":1792,"start2":1792,"length1":17,"length2":17}]],"length":1888,"saved":false}
{"ts":1377030435832,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    \r\n"],[0,"\tsystem("]],"start1":1852,"start2":1852,"length1":16,"length2":22}]],"length":1894,"saved":false}
{"ts":1377041499167,"patch":[[{"diffs":[[0,"n;\r\n    "],[1,"\t"],[0,"   "],[-1,"    return -1"],[1,"if(A[begin] < V) return end;\r\n\t\t   if(A[begin] > V) return begin;\r\n           return end"],[0,";\r\n     "]],"start1":1019,"start2":1019,"length1":32,"length2":108},{"diffs":[[0,"d = "],[-1,"(begin+end)/2"],[1,"0"],[0,";\r\n "]],"start1":1154,"start2":1154,"length1":21,"length2":9},{"diffs":[[0,"(begin < end){\r\n"],[1,"\t\t   mid = (begin+end)/2;\r\n"],[0,"           if(A["]],"start1":1174,"start2":1174,"length1":32,"length2":59},{"diffs":[[0,"    "],[-1," \r\n           }\r\n    "],[1,"begin = mid+1;\r\n           }else{\r\n\t\t\t   end = mid;\r\n\t\t"],[0,"   }\r\n"],[1,"       }\r\n"],[0,"    "]],"start1":1296,"start2":1296,"length1":35,"length2":79},{"diffs":[[0,"     return "],[-1,"-1"],[1,"begin"],[0,";\r\n    }\r\n  "]],"start1":1382,"start2":1382,"length1":26,"length2":29},{"diffs":[[0," }\r\n"],[-1,"    \r\n    double findMedian"],[1,"\t\r\n\tint find"],[0,"Sort"]],"start1":1405,"start2":1405,"length1":35,"length2":20},{"diffs":[[0,"edArrays"],[-1,"Rec"],[1,"K"],[0,"(int A[]"]],"start1":1425,"start2":1425,"length1":19,"length2":17},{"diffs":[[0,"nt A[], int "],[-1,"begin, int end"],[1,"m"],[0,", int B[], i"]],"start1":1436,"start2":1436,"length1":38,"length2":25},{"diffs":[[0,"[], int "],[-1,"begi"],[0,"n, int "],[-1,"end"],[1,"K"],[0,") {\r\n   "]],"start1":1456,"start2":1456,"length1":30,"length2":24},{"diffs":[[0,"on\r\n"],[-1,"        \r\n        "],[1,"\t\tif(m==0 && n==0) return 0;\r\n\t\tif(m==0) return B[K];\r\n\t\tif(n==0) return A[K];\r\n\t\tif(m+n <= K) return 0;\r\n\r\n\t\tint *pA = A;\r\n\t\tint *pB = B;\r\n\t\tif(A[0] > B[0]){\r\n\t\t\tpA = B;\r\n\t\t\tpB = A;\r\n\t\t\tint t = m;\r\n\t\t\tm = n;\r\n\t\t\tn = t;\r\n\t\t}\r\n\r\n\t\tif(pA[m-1] <= pB[0]){\r\n\t\t\tif(K >= m){\r\n\t\t\t\treturn pB[K-m];\r\n\t\t\t}else{\r\n\t\t\t\treturn pA[K];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(pA[0] > pB[n-1]){\r\n\t\t\tif(K >= n){\r\n\t\t\t\treturn pA[K-n];\r\n\t\t\t}else{\r\n\t\t\t\treturn pB[K];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint begin = 0;\r\n\t\tint end = m;\r\n\r\n\t\tint k = 0;\r\n\t\tint mid = 0;\r\n\t\twhile(begin < end){\r\n\t\t\tmid = (begin+end)/2;\r\n\t\t\tk = binarySearch(pB, 0, n, pA[mid]);\r\n\t\t\tif(k >= n){\r\n\t\t\t\tif(mid + n <= K){\r\n\t\t\t\t\treturn pA[K-n];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tend = mid;\r\n\t\t\t\t}\r\n\t\t\t}else if(k == 0){\r\n\t\t\t\tif(mid >= K){\r\n\t\t\t\t\treturn pA[K];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbegin = mid+1;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(mid+k == K){\r\n\t\t\t\t\treturn min(pA[mid], pB[k]);\r\n\t\t\t\t}else if(mid+k < K){\r\n\t\t\t\t\tbegin = mid+1;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tend = mid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//not found in pA\r\n\t\tmid = (begin+end)/2;\r\n\t\treturn pB[K-mid];"],[0,"\r\n  "]],"start1":1569,"start2":1569,"length1":26,"length2":1026},{"diffs":[[0,"\n    }\r\n"],[-1,"    "],[0,""],[1,""],[0,"\r\n    do"]],"start1":2592,"start2":2592,"length1":20,"length2":16},{"diffs":[[0,"nction\r\n"],[-1,"        "],[1,"\t\tif((m+n)%2==0){\r\n\t\t\treturn findSortedArraysK(A, m, B, n, (m+n)/2)/2. + findSortedArraysK(A, m, B, n, (m+n)/2-1)/2.;\r\n\t\t}else{\r\n\t\t\t"],[0,"return f"]],"start1":2759,"start2":2759,"length1":24,"length2":148},{"diffs":[[0,"\treturn find"],[-1,"Median"],[0,"SortedArrays"]],"start1":2898,"start2":2898,"length1":30,"length2":24},{"diffs":[[0,"rays"],[-1,"Rec(A, 0, m, B, 0, n, )\r\n "],[1,"K(A, m, B, n, (m+n)/2);\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n"],[0,"   "],[1," "],[0,"}\r\n}"]],"start1":2918,"start2":2918,"length1":37,"length2":59},{"diffs":[[0,"\r\n\r\n"],[-1,"    "],[1,"\tint a[] = {2};\r\n\t"],[0,"int "],[-1,"a"],[1,"b"],[0,"[] = {1,"],[-1,"2,3,4,5};\r\n    vector<int> v(a, a+"],[1,"3};\r\n\tint m = sizeof(a)/sizeof(a[0]);\r\n\tint n = "],[0,"sizeof("],[-1,"a"],[1,"b"],[0,")/si"]],"start1":3011,"start2":3011,"length1":67,"length2":95},{"diffs":[[0,"eof("],[-1,"a"],[1,"b"],[0,"[0])"],[-1,")"],[0,";\r\n "]],"start1":3107,"start2":3107,"length1":14,"length2":13},{"diffs":[[0,"\r\n    \r\n"],[-1,"    "],[1,"\tcout<< s.findMedianSortedArrays(a, m, b, n) << endl;\r\n\tfor(int i=0;i<10;i++){\r\n\t\t//cout<< s.findSortedArraysK(a, m, b, n, i) << endl;\r\n\t}\r\n"],[0,"\r\n\tsyste"]],"start1":3117,"start2":3117,"length1":20,"length2":156},{"diffs":[[0,";\r\n}\r\n\r\n"],[-1,"\r\n\r\n"]],"start1":3283,"start2":3283,"length1":12,"length2":8}]],"length":3291,"saved":false}
