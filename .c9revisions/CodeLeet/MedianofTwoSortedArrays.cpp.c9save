{"ts":1376584646860,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*Longest Common PrefixJan 17 '125821 / 16194\r\nWrite a function to find the longest common prefix string amongst an array of strings.\r\n\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 08/14/2013\r\n*/\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n#include<climits>\r\n\r\n#include<vector>\r\n#include<string>\r\n#include<algorithm>\r\n#include<sstream>\r\n#include<stack>\r\n#include<map>\r\n//#include<unordered_set>\r\n\r\n#include<queue>\r\n#include<set>\r\n\r\n// Definition for binary tree\r\n struct TreeNode {\r\n     int val;\r\n     TreeNode *left;\r\n     TreeNode *right;\r\n TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n};\r\n\r\n//Definition for singly-linked list.\r\nstruct ListNode {\r\n    int val;\r\n    ListNode *next;\r\n    ListNode(int x) : val(x), next(NULL) {}\r\n};\r\n\r\nclass Solution {\r\npublic:\r\n    string longestCommonPrefix(vector<string> &strs) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        string r = \"\";\r\n\r\n\t\tint n=strs.size();\r\n\t\tif(n == 0) return r;\r\n\t\tif(n == 1) return strs[0];\r\n\t\tfor(int i=0;i<strs[0].size();i++){\r\n\t\t\tchar c = strs[0][i];\r\n\r\n\t\t\tbool found = true;\r\n\t\t\tfor(int j=1;j<n;j++){\r\n\t\t\t\tif(strs[j].size() < i+1 || strs[j][i] != c){\r\n\t\t\t\t\tfound = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!found) break;\r\n\t\t\tr += c;\r\n\t\t}\r\n\r\n\t\treturn r;\r\n    }\r\n};\r\n\r\nvoid main(){\r\n    Solution s;\r\n\r\n\tsystem(\"pause\");\r\n}\r\n\r\n\r\n\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1367}]],"length":1367}
{"contributors":[],"silentsave":false,"ts":1376584655353,"patch":[[{"diffs":[[0,"/*"],[-1,"Longest Common PrefixJan 17 '125821 / 16194\r\nWrite a function to find the longest common prefix string amongst an array of strings"],[1,"Median of Two Sorted ArraysMar 28 '116654 / 33995\r\nThere are two sorted arrays A and B of size m and n respectively. Find the median of the two sorted arrays. The overall run time complexity should be O(log (m+n))"],[0,".\r\n\r"]],"start1":0,"start2":0,"length1":136,"length2":219}]],"length":1450,"saved":false}
{"ts":1376584657739,"patch":[[{"diffs":[[0,"te: 08/1"],[-1,"4"],[1,"5"],[0,"/2013\r\n*"]],"start1":257,"start2":257,"length1":17,"length2":17}]],"length":1450,"saved":false}
{"ts":1376584670856,"patch":[[{"diffs":[[0,"    "],[-1,"string longestCommonPrefix(vector<string> &strs"],[1,"double findMedianSortedArrays(int A[], int m, int B[], int n"],[0,") {\r"]],"start1":855,"start2":855,"length1":55,"length2":68},{"diffs":[[0,"on\r\n"],[1,""],[0,"        "],[-1,"string r = \"\";\r\n\r\n\t\tint n=strs.size();\r\n\t\tif(n == 0) return r;\r\n\t\tif(n == 1) return strs[0];\r\n\t\tfor(int i=0;i<strs[0].size();i++){\r\n\t\t\tchar c = strs[0][i];\r\n\r\n\t\t\tbool found = true;\r\n\t\t\tfor(int j=1;j<n;j++){\r\n\t\t\t\tif(strs[j].size() < i+1 || strs[j][i] != c){\r\n\t\t\t\t\tfound = false;\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif(!found) break;\r\n\t\t\tr += c;\r\n\t\t}\r\n\r\n\t\treturn r;"],[0,"\r\n  "]],"start1":1016,"start2":1016,"length1":375,"length2":16}]],"length":1104,"saved":false}
{"contributors":[],"silentsave":false,"ts":1376699314376,"patch":[[{"diffs":[[0,"      \r\n"],[1,"        \r\n"],[0,"    }\r\n}"]],"start1":1022,"start2":1022,"length1":16,"length2":26}]],"length":1114,"saved":false}
{"ts":1376699327890,"patch":[[{"diffs":[[0,"\n    }\r\n"],[1,"    \r\n    double findMedianSortedArrays(int A[], int m, int B[], int n) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        \r\n        \r\n    }\r\n"],[0,"};\r\n\r\nvo"]],"start1":1039,"start2":1039,"length1":16,"length2":214}]],"length":1312,"saved":false}
{"ts":1376699329952,"patch":[[{"diffs":[[0,"dianSortedArrays"],[1,"Rec"],[0,"(int A[], int m,"]],"start1":872,"start2":872,"length1":32,"length2":35}]],"length":1315,"saved":false}
{"ts":1376699344043,"patch":[[{"diffs":[[0,"on\r\n        "],[-1,"\r\n        "],[1,"return findMedianSortedArraysRec(A, 0, m, B, 0, n)"],[0,"\r\n    }\r\n};\r"]],"start1":1217,"start2":1217,"length1":34,"length2":74}]],"length":1355,"saved":false}
{"ts":1376699357525,"patch":[[{"diffs":[[0,"ec(int A[], int "],[-1,"m"],[1,"begin, int end"],[0,", int B[], int n"]],"start1":889,"start2":889,"length1":33,"length2":46},{"diffs":[[0,"d, int B[], int "],[-1,"n"],[1,"begin, int end"],[0,") {\r\n        // "]],"start1":918,"start2":918,"length1":33,"length2":46}]],"length":1381,"saved":false}
{"ts":1376699504367,"patch":[[{"diffs":[[0," B, 0, n"],[1,", "],[0,")\r\n    }"]],"start1":1296,"start2":1296,"length1":16,"length2":18}]],"length":1383,"saved":false}
{"ts":1376699519197,"patch":[[{"diffs":[[0,"ublic:\r\n"],[1,"\r\n"],[0,"    doub"]],"start1":847,"start2":847,"length1":16,"length2":18}]],"length":1385,"saved":false}
{"ts":1376699520337,"patch":[[{"diffs":[[0,"ublic:\r\n"],[1,"    \r\n    "],[0,"\r\n    do"]],"start1":847,"start2":847,"length1":16,"length2":26}]],"length":1395,"saved":false}
{"ts":1376699539406,"patch":[[{"diffs":[[0,"lic:\r\n    \r\n"],[1,"    int binarySearch(int A[], int begin, int end, int V){\r\n        \r\n    }\r\n"],[0,"    \r\n    do"]],"start1":849,"start2":849,"length1":24,"length2":100}]],"length":1471,"saved":false}
{"ts":1376699543969,"patch":[[{"diffs":[[0,"ublic:\r\n"],[-1,"    \r\n"],[0,"    int "]],"start1":847,"start2":847,"length1":22,"length2":16}]],"length":1465,"saved":false}
{"ts":1376699563827,"patch":[[{"diffs":[[0,", int V){\r\n "],[1,"      if(begin >= end) return -1;\r\n"],[0,"       \r\n   "]],"start1":903,"start2":903,"length1":24,"length2":59}]],"length":1500,"saved":false}
{"ts":1376699575508,"patch":[[{"diffs":[[0,"-1;\r\n       "],[1,"if(begin +1 == end){\r\n           \r\n       }"],[0,"\r\n    }\r\n   "]],"start1":945,"start2":945,"length1":24,"length2":67}]],"length":1543,"saved":false}
{"ts":1376699607069,"patch":[[{"diffs":[[0,"d){\r\n           "],[1,"if(A[begin] == V) return begin;\r\n           return -1;\r\n       }\r\n       \r\n       int mid = (begin+end)/2;"],[0,"\r\n       }\r\n    "]],"start1":974,"start2":974,"length1":32,"length2":138},{"diffs":[[0,"/2;\r\n       "],[-1,"}"],[0,"\r\n    }\r\n   "]],"start1":1093,"start2":1093,"length1":25,"length2":24}]],"length":1648,"saved":false}
{"ts":1376699619038,"patch":[[{"diffs":[[0,"/2;\r\n       "],[1,"while(begin < end){\r\n           \r\n       }"],[0,"\r\n    }\r\n   "]],"start1":1093,"start2":1093,"length1":24,"length2":66}]],"length":1690,"saved":false}
{"ts":1376699625144,"patch":[[{"diffs":[[0,"\r\n       }\r\n"],[1,"       \r\n       return -1;\r\n"],[0,"    }\r\n    \r"]],"start1":1137,"start2":1137,"length1":24,"length2":52}]],"length":1718,"saved":false}
{"ts":1376699641650,"patch":[[{"diffs":[[0,"(begin < end){\r\n"],[1,"           if(A[mid] == V) return mid;\r\n"],[0,"           \r\n   "]],"start1":1110,"start2":1110,"length1":32,"length2":72}]],"length":1758,"saved":false}
{"ts":1376699650869,"patch":[[{"diffs":[[0,"id;\r\n           "],[1,"if(A[mid] < V){\r\n            \r\n           }"],[0,"\r\n       }\r\n    "]],"start1":1161,"start2":1161,"length1":32,"length2":75}]],"length":1801,"saved":false}
{"ts":1376699651908,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\r\n           }\r\n"]],"start1":1190,"start2":1190,"length1":32,"length2":36}]],"length":1805,"saved":false}
{"ts":1376699653598,"patch":[[{"diffs":[[0,"            "],[-1,"    "],[0,"\r\n          "]],"start1":1194,"start2":1194,"length1":28,"length2":24}]],"length":1801,"saved":false}
{"ts":1376699658702,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\r\n           }\r\n"]],"start1":1190,"start2":1190,"length1":32,"length2":36}]],"length":1805,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377022017349,"patch":[[{"diffs":[[0,"n s;\r\n\r\n"],[1,"    int a[] = {1,2,3};\r\n    vector<int> v(a, a+sizeof(a)/sizeof(a[0]));\r\n    \r\n"],[0,"\tsystem("]],"start1":1769,"start2":1769,"length1":16,"length2":95}]],"length":1884,"saved":false}
{"ts":1377022023569,"patch":[[{"diffs":[[0,"= {1,2,3"],[1,",4,6"],[0,"};\r\n    "]],"start1":1789,"start2":1789,"length1":16,"length2":20}]],"length":1888,"saved":false}
{"ts":1377022025385,"patch":[[{"diffs":[[0,"1,2,3,4,"],[-1,"6"],[1,"5"],[0,"};\r\n    "]],"start1":1792,"start2":1792,"length1":17,"length2":17}]],"length":1888,"saved":false}
{"ts":1377030435832,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    \r\n"],[0,"\tsystem("]],"start1":1852,"start2":1852,"length1":16,"length2":22}]],"length":1894,"saved":false}
{"ts":1377041499167,"patch":[[{"diffs":[[0,"n;\r\n    "],[1,"\t"],[0,"   "],[-1,"    return -1"],[1,"if(A[begin] < V) return end;\r\n\t\t   if(A[begin] > V) return begin;\r\n           return end"],[0,";\r\n     "]],"start1":1019,"start2":1019,"length1":32,"length2":108},{"diffs":[[0,"d = "],[-1,"(begin+end)/2"],[1,"0"],[0,";\r\n "]],"start1":1154,"start2":1154,"length1":21,"length2":9},{"diffs":[[0,"(begin < end){\r\n"],[1,"\t\t   mid = (begin+end)/2;\r\n"],[0,"           if(A["]],"start1":1174,"start2":1174,"length1":32,"length2":59},{"diffs":[[0,"    "],[-1," \r\n           }\r\n    "],[1,"begin = mid+1;\r\n           }else{\r\n\t\t\t   end = mid;\r\n\t\t"],[0,"   }\r\n"],[1,"       }\r\n"],[0,"    "]],"start1":1296,"start2":1296,"length1":35,"length2":79},{"diffs":[[0,"     return "],[-1,"-1"],[1,"begin"],[0,";\r\n    }\r\n  "]],"start1":1382,"start2":1382,"length1":26,"length2":29},{"diffs":[[0," }\r\n"],[-1,"    \r\n    double findMedian"],[1,"\t\r\n\tint find"],[0,"Sort"]],"start1":1405,"start2":1405,"length1":35,"length2":20},{"diffs":[[0,"edArrays"],[-1,"Rec"],[1,"K"],[0,"(int A[]"]],"start1":1425,"start2":1425,"length1":19,"length2":17},{"diffs":[[0,"nt A[], int "],[-1,"begin, int end"],[1,"m"],[0,", int B[], i"]],"start1":1436,"start2":1436,"length1":38,"length2":25},{"diffs":[[0,"[], int "],[-1,"begi"],[0,"n, int "],[-1,"end"],[1,"K"],[0,") {\r\n   "]],"start1":1456,"start2":1456,"length1":30,"length2":24},{"diffs":[[0,"on\r\n"],[-1,"        \r\n        "],[1,"\t\tif(m==0 && n==0) return 0;\r\n\t\tif(m==0) return B[K];\r\n\t\tif(n==0) return A[K];\r\n\t\tif(m+n <= K) return 0;\r\n\r\n\t\tint *pA = A;\r\n\t\tint *pB = B;\r\n\t\tif(A[0] > B[0]){\r\n\t\t\tpA = B;\r\n\t\t\tpB = A;\r\n\t\t\tint t = m;\r\n\t\t\tm = n;\r\n\t\t\tn = t;\r\n\t\t}\r\n\r\n\t\tif(pA[m-1] <= pB[0]){\r\n\t\t\tif(K >= m){\r\n\t\t\t\treturn pB[K-m];\r\n\t\t\t}else{\r\n\t\t\t\treturn pA[K];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(pA[0] > pB[n-1]){\r\n\t\t\tif(K >= n){\r\n\t\t\t\treturn pA[K-n];\r\n\t\t\t}else{\r\n\t\t\t\treturn pB[K];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tint begin = 0;\r\n\t\tint end = m;\r\n\r\n\t\tint k = 0;\r\n\t\tint mid = 0;\r\n\t\twhile(begin < end){\r\n\t\t\tmid = (begin+end)/2;\r\n\t\t\tk = binarySearch(pB, 0, n, pA[mid]);\r\n\t\t\tif(k >= n){\r\n\t\t\t\tif(mid + n <= K){\r\n\t\t\t\t\treturn pA[K-n];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tend = mid;\r\n\t\t\t\t}\r\n\t\t\t}else if(k == 0){\r\n\t\t\t\tif(mid >= K){\r\n\t\t\t\t\treturn pA[K];\r\n\t\t\t\t}else{\r\n\t\t\t\t\tbegin = mid+1;\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tif(mid+k == K){\r\n\t\t\t\t\treturn min(pA[mid], pB[k]);\r\n\t\t\t\t}else if(mid+k < K){\r\n\t\t\t\t\tbegin = mid+1;\r\n\t\t\t\t}else{\r\n\t\t\t\t\tend = mid;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\t//not found in pA\r\n\t\tmid = (begin+end)/2;\r\n\t\treturn pB[K-mid];"],[0,"\r\n  "]],"start1":1569,"start2":1569,"length1":26,"length2":1026},{"diffs":[[0,"\n    }\r\n"],[-1,"    "],[0,""],[1,""],[0,"\r\n    do"]],"start1":2592,"start2":2592,"length1":20,"length2":16},{"diffs":[[0,"nction\r\n"],[-1,"        "],[1,"\t\tif((m+n)%2==0){\r\n\t\t\treturn findSortedArraysK(A, m, B, n, (m+n)/2)/2. + findSortedArraysK(A, m, B, n, (m+n)/2-1)/2.;\r\n\t\t}else{\r\n\t\t\t"],[0,"return f"]],"start1":2759,"start2":2759,"length1":24,"length2":148},{"diffs":[[0,"\treturn find"],[-1,"Median"],[0,"SortedArrays"]],"start1":2898,"start2":2898,"length1":30,"length2":24},{"diffs":[[0,"rays"],[-1,"Rec(A, 0, m, B, 0, n, )\r\n "],[1,"K(A, m, B, n, (m+n)/2);\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n"],[0,"   "],[1," "],[0,"}\r\n}"]],"start1":2918,"start2":2918,"length1":37,"length2":59},{"diffs":[[0,"\r\n\r\n"],[-1,"    "],[1,"\tint a[] = {2};\r\n\t"],[0,"int "],[-1,"a"],[1,"b"],[0,"[] = {1,"],[-1,"2,3,4,5};\r\n    vector<int> v(a, a+"],[1,"3};\r\n\tint m = sizeof(a)/sizeof(a[0]);\r\n\tint n = "],[0,"sizeof("],[-1,"a"],[1,"b"],[0,")/si"]],"start1":3011,"start2":3011,"length1":67,"length2":95},{"diffs":[[0,"eof("],[-1,"a"],[1,"b"],[0,"[0])"],[-1,")"],[0,";\r\n "]],"start1":3107,"start2":3107,"length1":14,"length2":13},{"diffs":[[0,"\r\n    \r\n"],[-1,"    "],[1,"\tcout<< s.findMedianSortedArrays(a, m, b, n) << endl;\r\n\tfor(int i=0;i<10;i++){\r\n\t\t//cout<< s.findSortedArraysK(a, m, b, n, i) << endl;\r\n\t}\r\n"],[0,"\r\n\tsyste"]],"start1":3117,"start2":3117,"length1":20,"length2":156},{"diffs":[[0,";\r\n}\r\n\r\n"],[-1,"\r\n\r\n"]],"start1":3283,"start2":3283,"length1":12,"length2":8}]],"length":3291,"saved":false}
{"contributors":[],"silentsave":false,"ts":1377118360569,"patch":[[{"diffs":[[0,"\n    }\r\n"],[1,"    \r\n    double findMedianSortedArrays(int A[], int m, int B[], int n) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n    \tif((m+n)%2==0){\r\n\t\t\treturn findSortedArraysK(A, m, B, n, (m+n)/2)/2. + findSortedArraysK(A, m, B, n, (m+n)/2-1)/2.;\r\n\t\t}else{\r\n\t\t\treturn findSortedArraysK(A, m, B, n, (m+n)/2);\r\n\t\t}\r\n\t\t\r\n\t\treturn 0;\r\n    }\r\n"],[0,"};\r\n\r\nvo"]],"start1":2968,"start2":2968,"length1":16,"length2":399}]],"length":3674,"saved":false}
{"ts":1377118370896,"patch":[[{"diffs":[[0,"dianSortedArrays"],[1,"—— "],[0,"(int A[], int m,"]],"start1":2619,"start2":2619,"length1":32,"length2":35}]],"length":3677,"saved":false}
{"ts":1377118383198,"patch":[[{"diffs":[[0,"rays"],[-1,"—— "],[1,"_Ologmlogn"],[0,"(int"]],"start1":2631,"start2":2631,"length1":11,"length2":18}]],"length":3684,"saved":false}
{"ts":1377118391703,"patch":[[{"diffs":[[0,"   \t"],[-1,"if((m+n)%2==0){\r\n\t\t\treturn findSortedArraysK(A, m, B, n, (m+n)/2)/2. + findSortedArraysK(A, m, B, n, (m+n)/2-1)/2.;\r\n\t\t}else{\r\n\t\t\treturn findSortedArraysK(A, m, B, n, (m+n)/2);\r\n\t\t}"],[0,"\r\n\t\t"]],"start1":3158,"start2":3158,"length1":189,"length2":8}]],"length":3503,"saved":false}
{"ts":1377118419467,"patch":[[{"diffs":[[0,"n\r\n    \t\r\n\t\t"],[1,"if((m+n)%2==0){\r\n    \t\treturn findSortedArraysK(A, m, B, n, (m+n)/2)/2. + findSortedArraysK(A, m, B, n, (m+n)/2-1)/2.;\r\n\t\t}else{\r\n\t\t\treturn findSortedArraysK(A, m, B, n, (m+n)/2);\r\n\t\t}"],[0,"\r\n\t\treturn 0"]],"start1":3154,"start2":3154,"length1":24,"length2":208}]],"length":3687,"saved":false}
{"ts":1377118423874,"patch":[[{"diffs":[[0,"on\r\n"],[-1,"    \t\r\n"],[0,"\t\tif"]],"start1":3153,"start2":3153,"length1":15,"length2":8},{"diffs":[[0,";\r\n\t\t}\r\n"],[1,"        \r\n"],[0,"\t\treturn"]],"start1":3337,"start2":3337,"length1":16,"length2":26}]],"length":3690,"saved":false}
{"ts":1377118427617,"patch":[[{"diffs":[[0,"indSortedArraysK"],[1,"Rec"],[0,"(A, m, B, n, (m+"]],"start1":3190,"start2":3190,"length1":32,"length2":35}]],"length":3693,"saved":false}
{"ts":1377118430983,"patch":[[{"diffs":[[0,"indSortedArraysK"],[1,"Rec"],[0,"(A, m, B, n, (m+"]],"start1":3237,"start2":3237,"length1":32,"length2":35},{"diffs":[[0,"indSortedArraysK"],[1,"Rec"],[0,"(A, m, B, n, (m+"]],"start1":3306,"start2":3306,"length1":32,"length2":35}]],"length":3699,"saved":false}
{"ts":1377118442760,"patch":[[{"diffs":[[0,"   }\r\n    \r\n"],[1,"    int findSortedArraysK(int A[], int m, int B[], int n, int K) {\r\n            \r\n"],[0,"    double f"]],"start1":2980,"start2":2980,"length1":24,"length2":106}]],"length":3781,"saved":false}
{"ts":1377118444867,"patch":[[{"diffs":[[0,"nt n, int K) {\r\n"],[1,"    }\r\n"],[0,"            \r\n  "]],"start1":3044,"start2":3044,"length1":32,"length2":39}]],"length":3788,"saved":false}
{"ts":1377118445536,"patch":[[{"diffs":[[0,", int K) {\r\n"],[1,"        \r\n"],[0,"    }\r\n     "]],"start1":3048,"start2":3048,"length1":24,"length2":34}]],"length":3798,"saved":false}
{"ts":1377118449871,"patch":[[{"diffs":[[0,"indSortedArraysK"],[1,"Rec"],[0,"(int A[], int m,"]],"start1":3001,"start2":3001,"length1":32,"length2":35}]],"length":3801,"saved":false}
{"ts":1377118469026,"patch":[[{"diffs":[[0,"ec(int A[], int "],[-1,"m"],[1,"aB, int aE"],[0,", int B[], int n"]],"start1":3018,"start2":3018,"length1":33,"length2":42}]],"length":3810,"saved":false}
{"ts":1377118475764,"patch":[[{"diffs":[[0,"E, int B[], int "],[-1,"n"],[1,"bB, int BE"],[0,", int K) {\r\n    "]],"start1":3043,"start2":3043,"length1":33,"length2":42}]],"length":3819,"saved":false}
{"ts":1377118489821,"patch":[[{"diffs":[[0,"tedArraysKRec(A,"],[1," 0,"],[0," m, B,"],[1," 0,"],[0," n, (m+n)/2)/2. "]],"start1":3316,"start2":3316,"length1":38,"length2":44},{"diffs":[[0,"tedArraysKRec(A,"],[1," 0,"],[0," m, B,"],[1," 0,"],[0," n, (m+n)/2-1)/2"]],"start1":3369,"start2":3369,"length1":38,"length2":44},{"diffs":[[0,"sKRec(A,"],[1," 0,"],[0," m, B,"],[1," 0,"],[0," n, (m+n"]],"start1":3452,"start2":3452,"length1":22,"length2":28}]],"length":3837,"saved":false}
{"ts":1377118631912,"patch":[[{"diffs":[[0,"bB, int "],[-1,"B"],[1,"b"],[0,"E, int K"]],"start1":3059,"start2":3059,"length1":17,"length2":17}]],"length":3837,"saved":false}
{"ts":1377118660798,"patch":[[{"diffs":[[0,"t bE, int K) {\r\n"],[1,"        if(aB >= aE) return -1;\r\n"],[0,"        \r\n    }\r"]],"start1":3065,"start2":3065,"length1":32,"length2":65}]],"length":3870,"saved":false}
{"ts":1377118665537,"patch":[[{"diffs":[[0,"B >= aE) return "],[-1,"-1"],[1,"0"],[0,";\r\n        \r\n   "]],"start1":3093,"start2":3093,"length1":34,"length2":33}]],"length":3869,"saved":false}
{"ts":1377118667145,"patch":[[{"diffs":[[0,"0;\r\n        "],[1,"if(aB >= aE) return 0;"],[0,"\r\n    }\r\n   "]],"start1":3109,"start2":3109,"length1":24,"length2":46}]],"length":3891,"saved":false}
{"ts":1377118674828,"patch":[[{"diffs":[[0," 0;\r\n        if("],[-1,"a"],[1,"b"],[0,"B >= "],[-1,"a"],[1,"b"],[0,"E) return 0;\r\n  "]],"start1":3108,"start2":3108,"length1":39,"length2":39}]],"length":3891,"saved":false}
{"ts":1377118676948,"patch":[[{"diffs":[[0," bE) return 0;\r\n"],[1,"        \r\n        \r\n"],[0,"    }\r\n         "]],"start1":3129,"start2":3129,"length1":32,"length2":52}]],"length":3911,"saved":false}
{"ts":1377118888796,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"int mA = (aB + aE)/2;"],[0,"\r\n    }\r\n   "]],"start1":3151,"start2":3151,"length1":24,"length2":45}]],"length":3932,"saved":false}
{"ts":1377118891035,"patch":[[{"diffs":[[0,"B + aE)/2;\r\n"],[1,"        int mA = (aB + aE)/2;\r\n        \r\n"],[0,"    }\r\n     "]],"start1":3174,"start2":3174,"length1":24,"length2":65}]],"length":3973,"saved":false}
{"ts":1377118897429,"patch":[[{"diffs":[[0,"       int m"],[-1,"A"],[1,"B"],[0," = ("],[-1,"a"],[1,"b"],[0,"B + "],[-1,"a"],[1,"b"],[0,"E)/2;\r\n     "]],"start1":3187,"start2":3187,"length1":35,"length2":35}]],"length":3973,"saved":false}
{"ts":1377118903622,"patch":[[{"diffs":[[0,"int "],[-1,"mA"],[1,"aM"],[0," = ("]],"start1":3163,"start2":3163,"length1":10,"length2":10},{"diffs":[[0,"int "],[-1,"mB"],[1,"bM"],[0," = ("]],"start1":3194,"start2":3194,"length1":10,"length2":10}]],"length":3973,"saved":false}
{"ts":1377118905952,"patch":[[{"diffs":[[0,"\r\n        \r\n"],[1,"        \r\n"],[0,"    }\r\n     "]],"start1":3215,"start2":3215,"length1":24,"length2":34}]],"length":3983,"saved":false}
{"ts":1377118912128,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"if()"],[0,"\r\n    }\r\n   "]],"start1":3223,"start2":3223,"length1":24,"length2":28}]],"length":3987,"saved":false}
{"ts":1377118925668,"patch":[[{"diffs":[[0,"     if("],[-1,")"],[1,"A[aM] == B[bM]){\r\n        \r\n        }"],[0,"\r\n    }\r"]],"start1":3230,"start2":3230,"length1":17,"length2":53}]],"length":4023,"saved":false}
{"ts":1377118931791,"patch":[[{"diffs":[[0,"M]){\r\n        \r\n"],[1,"        }else{\r\n        \r\n"],[0,"        }\r\n    }"]],"start1":3250,"start2":3250,"length1":32,"length2":58}]],"length":4049,"saved":false}
{"ts":1377118935068,"patch":[[{"diffs":[[0,"   }else"],[1," if"],[0,"{\r\n     "]],"start1":3271,"start2":3271,"length1":16,"length2":19}]],"length":4052,"saved":false}
{"ts":1377118940950,"patch":[[{"diffs":[[0,"}else if"],[1,"(A[aM] > B[bM])"],[0,"{\r\n     "]],"start1":3274,"start2":3274,"length1":16,"length2":31}]],"length":4067,"saved":false}
{"ts":1377118944871,"patch":[[{"diffs":[[0,"M]){\r\n        \r\n"],[1,"        }else{\r\n            \r\n"],[0,"        }\r\n    }"]],"start1":3294,"start2":3294,"length1":32,"length2":62}]],"length":4097,"saved":false}
{"ts":1377118949413,"patch":[[{"diffs":[[0,"[bM]){\r\n        "],[1,"    "],[0,"\r\n        }else "]],"start1":3248,"start2":3248,"length1":32,"length2":36}]],"length":4101,"saved":false}
{"ts":1377118955382,"patch":[[{"diffs":[[0,"\n        }\r\n"],[1,"        \r\n        return 0;\r\n"],[0,"    }\r\n     "]],"start1":3343,"start2":3343,"length1":24,"length2":53}]],"length":4130,"saved":false}
{"ts":1377119792695,"patch":[[{"diffs":[[0,"[bM]){\r\n        "],[1,"    "],[0,"\r\n        }else{"]],"start1":3296,"start2":3296,"length1":32,"length2":36}]],"length":4134,"saved":false}
{"ts":1377120241928,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"if(aM+bM)"],[0,"\r\n        }else "]],"start1":3252,"start2":3252,"length1":32,"length2":41}]],"length":4143,"saved":false}
{"ts":1377120272353,"patch":[[{"diffs":[[0,"if(aM+bM"],[-1,")"],[1," == M){\r\n                \r\n            }"],[0,"\r\n      "]],"start1":3268,"start2":3268,"length1":17,"length2":56}]],"length":4182,"saved":false}
{"ts":1377120748275,"patch":[[{"diffs":[[0,"if(aM+bM"],[1,"+2"],[0," == M){\r"]],"start1":3268,"start2":3268,"length1":16,"length2":18}]],"length":4184,"saved":false}
{"ts":1377120753306,"patch":[[{"diffs":[[0,"f(aM+bM+"],[-1,"2"],[1,"1"],[0," == M){\r"]],"start1":3269,"start2":3269,"length1":17,"length2":17}]],"length":4184,"saved":false}
{"ts":1377120862886,"patch":[[{"diffs":[[0,"                "],[1,"return "],[0,"\r\n            }\r"]],"start1":3287,"start2":3287,"length1":32,"length2":39}]],"length":4191,"saved":false}
{"ts":1377120866649,"patch":[[{"diffs":[[0," return "],[1,"A[aM];"],[0,"\r\n      "]],"start1":3302,"start2":3302,"length1":16,"length2":22}]],"length":4197,"saved":false}
{"ts":1377120872410,"patch":[[{"diffs":[[0,"urn A[aM];\r\n"],[1,"            }else{\r\n            \r\n"],[0,"            "]],"start1":3306,"start2":3306,"length1":24,"length2":58}]],"length":4231,"saved":false}
{"ts":1377120873974,"patch":[[{"diffs":[[0,"e{\r\n            "],[1,"    "],[0,"\r\n            }\r"]],"start1":3334,"start2":3334,"length1":32,"length2":36}]],"length":4235,"saved":false}
{"ts":1377120885591,"patch":[[{"diffs":[[0,"           }else"],[1," if(aM+bM+1 == M)"],[0,"{\r\n             "]],"start1":3319,"start2":3319,"length1":32,"length2":49}]],"length":4252,"saved":false}
{"ts":1377120889544,"patch":[[{"diffs":[[0,"              \r\n"],[1,"            }else{\r\n                \r\n"],[0,"            }\r\n "]],"start1":3357,"start2":3357,"length1":32,"length2":70}]],"length":4290,"saved":false}
{"ts":1377120901525,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"        if(A[aM] == B[bM]){\r\n    "],[0,"    "]],"start1":3223,"start2":3223,"length1":41,"length2":8},{"diffs":[[0,"\n            }\r\n"],[1,"            \r\n        if(A[aM] == B[bM]){\r\n            \r\n"],[0,"        }else if"]],"start1":3377,"start2":3377,"length1":32,"length2":89}]],"length":4314,"saved":false}
{"ts":1377120906718,"patch":[[{"diffs":[[0,"            "],[-1,"    "],[0,"return A[aM]"]],"start1":3254,"start2":3254,"length1":28,"length2":24},{"diffs":[[0,"A[aM];\r\n"],[-1,"    "],[0,"        "]],"start1":3273,"start2":3273,"length1":20,"length2":16},{"diffs":[[0,"){\r\n            "],[-1,"    "],[0,"\r\n            }e"]],"start1":3310,"start2":3310,"length1":36,"length2":32},{"diffs":[[0,"  \r\n        "],[-1,"    "],[0,"}else{\r\n    "]],"start1":3324,"start2":3324,"length1":28,"length2":24},{"diffs":[[0,"            "],[-1,"    \r\n    "],[1,"\r\n"],[0,"        }\r\n "]],"start1":3344,"start2":3344,"length1":34,"length2":26}]],"length":4290,"saved":false}
{"ts":1377121008133,"patch":[[{"diffs":[[0," return "],[1,"max("],[0,"A[aM]"],[1,", B[bM])"],[0,";\r\n     "]],"start1":3265,"start2":3265,"length1":21,"length2":33}]],"length":4302,"saved":false}
{"ts":1377121197807,"patch":[[{"diffs":[[0,"     }\r\n        "],[-1,"    "],[0,"\r\n        if(A[a"]],"start1":3373,"start2":3373,"length1":36,"length2":32}]],"length":4298,"saved":false}
{"ts":1377121210819,"patch":[[{"diffs":[[0,"   \r\n       "],[1,"\r\n        \r\n        if(A[aM] == B[bM]){\r\n            "],[0," if(aM+bM+1 "]],"start1":3222,"start2":3222,"length1":24,"length2":77},{"diffs":[[0,"            "],[1,"  "],[1,"  "],[0,"return max(A"]],"start1":3307,"start2":3307,"length1":24,"length2":28},{"diffs":[[0,"], B[bM]);\r\n"],[1,"    "],[0,"        }els"]],"start1":3338,"start2":3338,"length1":24,"length2":28},{"diffs":[[0,"    "],[-1,"\r\n"],[0,"    "],[1,"\r\n"],[0,"    "],[-1,"}else{\r\n            \r\n"],[0,"    "]],"start1":3395,"start2":3395,"length1":40,"length2":18},{"diffs":[[0," \r\n            }"],[1,"else{"],[0,"\r\n        \r\n    "]],"start1":3402,"start2":3402,"length1":32,"length2":37},{"diffs":[[0,"    "],[-1,"\r\n"],[0,"        "],[-1,"if(A[aM] == B[bM]){"],[0,"\r\n  "]],"start1":3429,"start2":3429,"length1":37,"length2":16},{"diffs":[[0,"  \r\n            "],[1,"}"],[0,"\r\n        }else "]],"start1":3439,"start2":3439,"length1":32,"length2":33}]],"length":4322,"saved":false}
{"ts":1377121213994,"patch":[[{"diffs":[[0,"2;\r\n"],[-1,"        \r\n       \r\n        "],[0,"\r\n  "]],"start1":3213,"start2":3213,"length1":35,"length2":8}]],"length":4295,"saved":false}
{"ts":1377121438105,"patch":[[{"diffs":[[0,"else if(aM+bM+1 "],[-1,"=="],[1,"<"],[0," M){\r\n          "]],"start1":3336,"start2":3336,"length1":34,"length2":33}]],"length":4294,"saved":false}
{"ts":1377121499271,"patch":[[{"diffs":[[0,"  if(aB "],[-1,">"],[1,"="],[0,"= aE) re"]],"start1":3087,"start2":3087,"length1":17,"length2":17}]],"length":4294,"saved":false}
{"ts":1377121501721,"patch":[[{"diffs":[[0,"  if(bB "],[-1,">"],[1,"="],[0,"= bE) re"]],"start1":3119,"start2":3119,"length1":17,"length2":17}]],"length":4294,"saved":false}
{"ts":1377121510100,"patch":[[{"diffs":[[0,"= aE"],[-1,") return 0;\r\n        if("],[1," && "],[0,"bB ="]],"start1":3096,"start2":3096,"length1":32,"length2":12},{"diffs":[[0,"n 0;\r\n        \r\n"],[1,"        \r\n"],[0,"        int aM ="]],"start1":3119,"start2":3119,"length1":32,"length2":42}]],"length":4284,"saved":false}
{"ts":1377121520141,"patch":[[{"diffs":[[0,"B == bE)"],[-1," return 0;"],[1,"{\r\n          return 0;  \r\n        } "],[0,"\r\n      "]],"start1":3105,"start2":3105,"length1":26,"length2":52}]],"length":4310,"saved":false}
{"ts":1377121523143,"patch":[[{"diffs":[[0,"bE){\r\n          "],[1,"  "],[0,"return 0;  \r\n   "]],"start1":3110,"start2":3110,"length1":32,"length2":34}]],"length":4312,"saved":false}
{"ts":1377121524938,"patch":[[{"diffs":[[0,"      \r\n"],[-1,"        \r\n"],[0,"        "]],"start1":3155,"start2":3155,"length1":26,"length2":16}]],"length":4302,"saved":false}
{"ts":1377121526364,"patch":[[{"diffs":[[0,"       }"],[-1," "],[0,"\r\n      "]],"start1":3142,"start2":3142,"length1":17,"length2":16}]],"length":4301,"saved":false}
{"ts":1377121559292,"patch":[[{"diffs":[[0,"eturn 0;"],[-1,"  "],[0,"\r\n      "]],"start1":3129,"start2":3129,"length1":18,"length2":16}]],"length":4299,"saved":false}
{"ts":1377121894978,"patch":[[{"diffs":[[0,"urn "],[-1,"max("],[0,"A[aM]"],[-1,", B[bM])"],[0,";\r\n "]],"start1":3304,"start2":3304,"length1":25,"length2":13}]],"length":4287,"saved":false}
{"ts":1377122037005,"patch":[[{"diffs":[[0,"bM+1 == "],[-1,"M"],[1,"K"],[0,"){\r\n    "]],"start1":3272,"start2":3272,"length1":17,"length2":17},{"diffs":[[0,"+bM+1 < "],[-1,"M"],[1,"K"],[0,"){\r\n    "]],"start1":3339,"start2":3339,"length1":17,"length2":17}]],"length":4287,"saved":false}
