{"ts":1375404274132,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*Insert IntervalMar 27 '123940 / 13994\r\nGiven a set of non-overlapping intervals, insert a new interval into the intervals (merge if necessary).\r\n\r\nYou may assume that the intervals were initially sorted according to their start times.\r\n\r\nExample 1:\r\nGiven intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].\r\n\r\nExample 2:\r\nGiven [1,2],[3,5],[6,7],[8,10],[12,16], insert and merge [4,9] in as [1,2],[3,10],[12,16].\r\n\r\nThis is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10].\r\n\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 08/01/2013\r\n*/\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n#include<climits>\r\n\r\n#include<vector>\r\n#include<string>\r\n#include<algorithm>\r\n\r\n#include<map>\r\n//#include<unordered_set>\r\n\r\n#include<queue>\r\n#include<set>\r\n\r\n// Definition for binary tree\r\n struct TreeNode {\r\n     int val;\r\n     TreeNode *left;\r\n     TreeNode *right;\r\n TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n};\r\n\r\n//Definition for singly-linked list.\r\nstruct ListNode {\r\n    int val;\r\n    ListNode *next;\r\n    ListNode(int x) : val(x), next(NULL) {}\r\n};\r\n\r\n// Definition for an interval.\r\nstruct Interval {\r\n    int start;\r\n    int end;\r\n    Interval() : start(0), end(0) {}\r\n    Interval(int s, int e) : start(s), end(e) {}\r\n};\r\n\r\nclass Solution {\r\npublic:\r\n    vector<Interval> insert(vector<Interval> &intervals, Interval newInterval) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        vector<Interval> A;\r\n\t\tif(intervals.size() == 0){\r\n\t\t\tA.push_back(newInterval);\r\n\t\t\treturn A;\r\n\t\t}\r\n\r\n\t\tint k = 0;\r\n\t\tfor(int i=0; i<intervals.size();i++){\r\n\t\t\tif(intervals[i].end < newInterval.start){\r\n\t\t\t\tA.push_back(intervals[i]);\r\n\t\t\t\tk++;\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(k<intervals.size() && intervals[k].start < newInterval.start){\r\n\t\t\tnewInterval.start = intervals[k].start;\r\n\t\t}\t\t\r\n\r\n\t\tfor(int i=k; i<intervals.size();i++){\r\n\t\t\tif(intervals[i].start <= newInterval.end){\r\n\t\t\t\tk++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(k>0){\r\n\t\t\tif(intervals[k-1].end > newInterval.end){\r\n\t\t\t\tnewInterval.end = intervals[k-1].end;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tA.push_back(newInterval);\r\n\r\n\t\t//search the end\r\n\t\tfor(int i=k; i<intervals.size();i++){\r\n\t\t\tA.push_back(intervals[i]);\r\n\t\t}\r\n\r\n\t\treturn A;\r\n    }\r\n};\r\n\r\nvoid main(){\r\n\tSolution s;\r\n\r\n\tsystem(\"pause\");\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":2323}]],"length":2323}
{"contributors":[],"silentsave":false,"ts":1375404279725,"patch":[[{"diffs":[[0,"/*"],[-1,"Insert"],[1,"Merge"],[0," Int"]],"start1":0,"start2":0,"length1":12,"length2":11},{"diffs":[[0,"Interval"],[1,"s"],[0,"Mar 27 '"]],"start1":8,"start2":8,"length1":16,"length2":17},{"diffs":[[0," '12"],[-1,"3940 / 13994\r\nGiven a set of non-overlapping intervals, insert a new interval into the"],[1,"4174 / 14847\r\nGiven a collection of"],[0," int"]],"start1":23,"start2":23,"length1":94,"length2":43},{"diffs":[[0,"vals"],[1,","],[0," "],[-1,"("],[0,"merge "],[-1,"if necessary).\r\n\r\nYou may assume that the intervals were initially sorted according to their start times.\r\n\r\nExample 1:\r\nGiven intervals [1,3],[6,9], insert and merge [2,5] in as [1,5],[6,9].\r\n\r\nE"],[1,"all overlapping intervals.\r\n\r\nFor e"],[0,"xample"],[-1," 2:"],[1,","],[0,"\r\nGi"]],"start1":68,"start2":68,"length1":221,"length2":58},{"diffs":[[0," [1,"],[-1,"2],[3,5],[6,7"],[1,"3],[2,6"],[0,"],[8"]],"start1":129,"start2":129,"length1":21,"length2":15},{"diffs":[[0,"],[1"],[-1,"2,16], insert and merge [4,9] in as"],[1,"5,18],\r\nreturn"],[0," [1,"],[-1,"2],[3"],[1,"6],[8"],[0,",10],[1"],[-1,"2,16].\r\n\r\nThis is because the new interval [4,9] overlaps with [3,5],[6,7],[8,10"],[1,"5,18"],[0,"].\r\n"]],"start1":147,"start2":147,"length1":139,"length2":42}]],"length":2006,"saved":false}
{"ts":1375404295703,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"class Solution {\r\npublic:\r\n    vector<Interval> insert(vector<Interval> &intervals, Interval new"],[1,"/**\r\n * Definition for an interval.\r\n * struct "],[0,"Interval"],[-1,")"],[0," {\r\n "],[-1,"  "],[1,"*"],[0,"     "],[-1,"// Start typing your C/C++ solution below\r\n   "],[1,"int start;\r\n *"],[0,"     "],[-1,"// DO NOT write int main() function\r\n  "],[1,"int end;\r\n *"],[0,"     "],[-1," vector<Interval> A;\r\n\t\tif(intervals.size() == 0){\r\n\t\t\tA.push_back(newInterval);\r\n\t\t\treturn A;\r\n\t\t}\r\n\r\n\t\tint k = 0;\r\n\t\tfor(int i=0; i<intervals.size();i++){\r\n\t\t\tif(intervals[i].end < newInterval.start){\r\n\t\t\t\tA.push_back(intervals[i]);\r\n\t\t\t\tk++;\r\n\t\t\t}else{\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(k<intervals.size() && intervals[k].start < newInterval.start){\r\n\t\t\tnewInterval.start = intervals[k].start;\r\n\t\t}\t\t\r\n\r\n\t\tfor(int i=k; i<intervals.size();i++){\r\n\t\t\tif(intervals[i].start <= newInterval.end){\r\n\t\t\t\tk++;\r\n\t\t\t\tcontinue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif(k>0){\r\n\t\t\tif(intervals[k-1].end > newInterval.end){\r\n\t\t\t\tnewInterval.end = intervals[k-1].end;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tA.push_back(newInterval);\r\n\r\n\t\t//search the end\r\n\t\tfor(int i=k; i<intervals.size();i++){\r\n\t\t\tA.push_back(intervals[i]);\r\n\t\t}\r\n\r\n\t\treturn A;"],[1,"Interval() : start(0), end(0) {}\r\n *     Interval(int s, int e) : start(s), end(e) {}\r\n * };\r\n */\r\nclass Solution {\r\npublic:\r\n    vector<Interval> merge(vector<Interval> &intervals) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        "],[0,"\r\n  "]],"start1":936,"start2":936,"length1":1007,"length2":399}]],"length":1398,"saved":false}
{"ts":1375404298840,"patch":[[{"diffs":[[0,"\r\n\r\n"],[-1,"/**\r\n * Definition for an interval.\r\n * struct Interval {\r\n *     int start;\r\n *     int end;\r\n *     Interval() : start(0), end(0) {}\r\n *     Interval(int s, int e) : start(s), end(e) {}\r\n * };\r\n */\r\n"],[0,"clas"]],"start1":936,"start2":936,"length1":209,"length2":8}]],"length":1197,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375418532219,"patch":[[{"diffs":[[0,"public:\r"],[1,"\n\r\n    struct IntervalCompare{\r\n        \r\n    }\r\n    \r"],[0,"\n    vec"]],"start1":958,"start2":958,"length1":16,"length2":70}]],"length":1251,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375418585017,"patch":[[{"diffs":[[0,"mpare{\r\n        "],[1,"bool operator () (const Interval a, const Interval b){\r\n            return a.start < b.start;\r\n        }"],[0,"\r\n    }\r\n    \r\n "]],"start1":990,"start2":990,"length1":32,"length2":136}]],"length":1355,"saved":false}
{"ts":1375418658829,"patch":[[{"diffs":[[0,"    }\r\n    }"],[1,";"],[0,"\r\n    \r\n    "]],"start1":1105,"start2":1105,"length1":24,"length2":25},{"diffs":[[0,"\r\n        \r\n"],[1,"        //sort Interval by start\r\n        sort(intervals.begin(), intervals.end(), IntervalCompare);\r\n        \r\n        \r\n"],[0,"    }\r\n};\r\n\r"]],"start1":1279,"start2":1279,"length1":24,"length2":146}]],"length":1478,"saved":false}
{"ts":1375418677038,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"for(int i=0;i<intervals.size();i++){\r\n        \r\n        }"],[0,"\r\n    }\r\n};\r"]],"start1":1399,"start2":1399,"length1":24,"length2":81}]],"length":1535,"saved":false}
{"ts":1375420586268,"patch":[[{"diffs":[[0,"tion\r\n        \r\n"],[1,"        vector<Interval> A;\r\n        if(intervals.size() == 0) return A;\r\n        \r\n"],[0,"        //sort I"]],"start1":1275,"start2":1275,"length1":32,"length2":116}]],"length":1619,"saved":false}
{"ts":1375421212818,"patch":[[{"diffs":[[0,"    "],[-1,"for("],[0,"int "],[-1,"i=0;i"],[1,"k=0;\r\n        while(k"],[0,"<int"]],"start1":1491,"start2":1491,"length1":21,"length2":33},{"diffs":[[0,"e();"],[-1,"i++"],[0,"){\r\n"]],"start1":1534,"start2":1534,"length1":11,"length2":8},{"diffs":[[0,"e();){\r\n        "],[1,"    \r\n            k++;"],[0,"\r\n        }\r\n   "]],"start1":1534,"start2":1534,"length1":32,"length2":54}]],"length":1650,"saved":false}
{"ts":1375421216719,"patch":[[{"diffs":[[0,"    "],[-1,"k++;"],[0,"\r\n  "]],"start1":1564,"start2":1564,"length1":12,"length2":8}]],"length":1646,"saved":false}
{"ts":1375421233841,"patch":[[{"diffs":[[0,".size();){\r\n"],[1,"            int begin = intervals[k].begin;\r\n"],[0,"            "]],"start1":1530,"start2":1530,"length1":24,"length2":69}]],"length":1691,"saved":false}
{"ts":1375421245257,"patch":[[{"diffs":[[0,"n;\r\n            "],[1,"int end = interval[k].end;"],[0,"\r\n            \r\n"]],"start1":1583,"start2":1583,"length1":32,"length2":58}]],"length":1717,"saved":false}
{"ts":1375421248304,"patch":[[{"diffs":[[0,"vals[k]."],[-1,"begin"],[1,"start"],[0,";\r\n     "]],"start1":1571,"start2":1571,"length1":21,"length2":21}]],"length":1717,"saved":false}
{"ts":1375421257004,"patch":[[{"diffs":[[0,"    int "],[-1,"begin"],[1,"start"],[0," = inter"]],"start1":1550,"start2":1550,"length1":21,"length2":21},{"diffs":[[0,"\r\n            \r\n"],[1,"            \r\n"],[0,"        }\r\n    }"]],"start1":1625,"start2":1625,"length1":32,"length2":46}]],"length":1731,"saved":false}
{"ts":1375421276089,"patch":[[{"diffs":[[0,"s.size()"],[-1,";"],[0,"){\r\n    "]],"start1":1529,"start2":1529,"length1":17,"length2":16},{"diffs":[[0,"  \r\n            "],[1,"while(end)"],[0,"\r\n        }\r\n   "]],"start1":1636,"start2":1636,"length1":32,"length2":42}]],"length":1740,"saved":false}
{"ts":1375421286420,"patch":[[{"diffs":[[0,"ile("],[-1,"end)"],[1,"k+1 < intervals.size()){\r\n                \r\n            }"],[0,"\r\n  "]],"start1":1654,"start2":1654,"length1":12,"length2":65}]],"length":1793,"saved":false}
{"ts":1375421294161,"patch":[[{"diffs":[[0,"intervals.size()"],[1," && "],[0,"){\r\n            "]],"start1":1664,"start2":1664,"length1":32,"length2":36}]],"length":1797,"saved":false}
{"ts":1375421336970,"patch":[[{"diffs":[[0,"         }\r\n"],[1,"            A.push_back(Interval(start, end));\r\n"],[0,"        }\r\n "]],"start1":1709,"start2":1709,"length1":24,"length2":72}]],"length":1845,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375422620323,"patch":[[{"diffs":[[0,"ze() && "],[1,"end >= intervals[k+1].start"],[0,"){\r\n    "]],"start1":1676,"start2":1676,"length1":16,"length2":43}]],"length":1872,"saved":false}
{"ts":1375422627674,"patch":[[{"diffs":[[0,"                "],[1,"k++;"],[0,"\r\n            }\r"]],"start1":1715,"start2":1715,"length1":32,"length2":36}]],"length":1876,"saved":false}
{"ts":1375422630458,"patch":[[{"diffs":[[0,"1].start){\r\n"],[1,"                \r\n"],[0,"            "]],"start1":1703,"start2":1703,"length1":24,"length2":42}]],"length":1894,"saved":false}
{"ts":1375422635720,"patch":[[{"diffs":[[0,"                "],[1,"end = max()"],[0,"\r\n              "]],"start1":1715,"start2":1715,"length1":32,"length2":43}]],"length":1905,"saved":false}
{"ts":1375422650422,"patch":[[{"diffs":[[0,"d = max("],[-1,")"],[1,"end, intervals[k+1].end);"],[0,"\r\n      "]],"start1":1733,"start2":1733,"length1":17,"length2":41}]],"length":1929,"saved":false}
{"ts":1375422700887,"patch":[[{"diffs":[[0,"\n        }\r\n"],[1,"        return A;\r\n"],[0,"    }\r\n};\r\n\r"]],"start1":1852,"start2":1852,"length1":24,"length2":43}]],"length":1948,"saved":false}
{"ts":1375422818870,"patch":[[{"diffs":[[0,"}\r\n    }"],[1,"intervalCompare"],[0,";\r\n    \r"]],"start1":1109,"start2":1109,"length1":16,"length2":31},{"diffs":[[0,".end(), "],[-1,"I"],[1,"i"],[0,"ntervalC"]],"start1":1465,"start2":1465,"length1":17,"length2":17},{"diffs":[[0,"interval"],[1,"s"],[0,"[k].end;"]],"start1":1623,"start2":1623,"length1":16,"length2":17}]],"length":1964,"saved":false}
{"ts":1375422866451,"patch":[[{"diffs":[[0,"rt, end));\r\n"],[1,"            k++;\r\n"],[0,"        }\r\n "]],"start1":1857,"start2":1857,"length1":24,"length2":42}]],"length":1982,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375462695047,"patch":[[{"diffs":[[0,"/*M"],[-1,"erge Intervals"],[1,"aximum Subarray "],[0,"Mar 2"],[-1,"7"],[1,"1"],[0," '124"],[-1,"17"],[1,"48"],[0,"4 / "],[-1,"14847\r\nGiven a collection of intervals, merge all overlapping intervals"],[1,"9520\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest sum"],[0,".\r\n\r"]],"start1":0,"start2":0,"length1":109,"length2":149},{"diffs":[[0,"ple,"],[-1,"\r\nG"],[1," g"],[0,"iven "],[-1,"[1,3],[2,6],[8,10],[15,18],\r\nreturn [1,6],[8,10],[15,18]"],[1,"the array [−2,1,−3,4,−1,2,1,−5,4],\r\nthe contiguous subarray [4,−1,2,1] has the largest sum = 6"],[0,".\r\n\r"]],"start1":158,"start2":158,"length1":72,"length2":109},{"diffs":[[0,"rithm>\r\n"],[-1,"\r\n"],[0,"#include"]],"start1":439,"start2":439,"length1":18,"length2":16},{"diffs":[[0,"c:\r\n"],[-1,"\r\n"],[0,"    "],[-1,"struct IntervalCompare{\r\n        bool operator () (const Interval a, const Interval b){\r\n            return a.start < b.start;\r\n        }\r\n    }intervalCompare;\r\n    \r\n    vector<Interval> merge(vector<Interval> &intervals"],[1,"int maxSubArray(int A[], int n"],[0,") {\r"]],"start1":1038,"start2":1038,"length1":236,"length2":42},{"diffs":[[0,"    "],[-1,"\r\n        vector<Interval> A;\r\n        if(intervals.size() == "],[1,"if(n<="],[0,"0) r"]],"start1":1181,"start2":1181,"length1":70,"length2":14},{"diffs":[[0,"<=0) return "],[-1,"A"],[1,"0"],[0,";\r\n        \r"]],"start1":1189,"start2":1189,"length1":25,"length2":25},{"diffs":[[0,"  //"],[-1,"sort Interval by start\r\n        sort(intervals.begin(), intervals.end(), intervalCompare)"],[1,"find the first positive one\r\n        int minV = A[0]"],[0,";\r\n "]],"start1":1221,"start2":1221,"length1":97,"length2":60},{"diffs":[[0,"while(k<"],[-1,"intervals.size()"],[1,"n"],[0,"){\r\n    "]],"start1":1316,"start2":1316,"length1":32,"length2":17},{"diffs":[[0,"   i"],[-1,"nt start = intervals[k].start;\r\n            int end = intervals[k].end"],[1,"f(A[k] > 0) break;\r\n            if(A[k] < minV) minV = A[k]"],[0,";\r\n "]],"start1":1338,"start2":1338,"length1":78,"length2":67},{"diffs":[[0,"];\r\n            "],[1,"k++;"],[0,"\r\n            wh"]],"start1":1400,"start2":1400,"length1":32,"length2":36},{"diffs":[[0,"    "],[1,"}\r\n"],[0,"    "],[-1,"while(k+1 < intervals.size() && end >= intervals[k+1].start){"],[1,"    \r\n        if(k>=n){\r\n            return minV;//return the minimal one"],[0,"\r\n  "]],"start1":1426,"start2":1426,"length1":73,"length2":88},{"diffs":[[0,"    "],[1,"}\r\n"],[0,"        "],[-1,"end = max(end, intervals[k+1].end);\r\n                k++;"],[1,"\r\n        minV = A[k];\r\n        int sum = minV;\r\n        while(k<n){"],[0,"\r\n  "]],"start1":1516,"start2":1516,"length1":73,"length2":87},{"diffs":[[0,"){\r\n            "],[-1,"}"],[1,"sum += A[k];"],[0,"\r\n            A."]],"start1":1597,"start2":1597,"length1":33,"length2":44},{"diffs":[[0,"    "],[-1,"A.push_back(Interval(start, end));"],[1,"if(sum > minV){"],[0,"\r\n  "]],"start1":1635,"start2":1635,"length1":42,"length2":23},{"diffs":[[0,"){\r\n            "],[-1,"k++;\r\n"],[1,"    \r\n    "],[0,"        }\r\n     "]],"start1":1652,"start2":1652,"length1":38,"length2":42},{"diffs":[[0,"    "],[-1,"return A;"],[1,"}"],[0,"\r\n  "]],"start1":1693,"start2":1693,"length1":17,"length2":9}]],"length":1765,"saved":false}
{"ts":1375462707713,"patch":[[{"diffs":[[0,"f(k>=n){"],[1,"//return the minimal one"],[0,"\r\n      "]],"start1":1452,"start2":1452,"length1":16,"length2":40},{"diffs":[[0,"inV;"],[-1,"//return the minimal one"],[0,"\r\n  "]],"start1":1506,"start2":1506,"length1":32,"length2":8}]],"length":1765,"saved":false}
{"ts":1375462749677,"patch":[[{"diffs":[[0,"        "],[-1,"m"],[0,"in"],[1,"t max"],[0,"V = A[k]"]],"start1":1533,"start2":1533,"length1":19,"length2":23},{"diffs":[[0,"                "],[1,"minv"],[0,"\r\n            }\r"]],"start1":1660,"start2":1660,"length1":32,"length2":36}]],"length":1773,"saved":false}
{"ts":1375462778294,"patch":[[{"diffs":[[0," sum = m"],[-1,"in"],[1,"ax"],[0,"V;\r\n    "]],"start1":1570,"start2":1570,"length1":18,"length2":18},{"diffs":[[0,"(sum > m"],[-1,"in"],[1,"ax"],[0,"V){\r\n   "]],"start1":1645,"start2":1645,"length1":18,"length2":18},{"diffs":[[0,"   m"],[-1,"inv\r\n            }\r\n        }"],[1,"axV = sum;\r\n            }\r\n            \r\n            if(sum < 0){\r\n                sum = 0;\r\n            }\r\n            k++;\r\n        }\r\n        returm maxV;"],[0,"\r\n  "]],"start1":1673,"start2":1673,"length1":37,"length2":165}]],"length":1901,"saved":false}
{"ts":1375462781988,"patch":[[{"diffs":[[0,"   retur"],[-1,"m"],[1,"n"],[0," maxV;\r\n"]],"start1":1819,"start2":1819,"length1":17,"length2":17}]],"length":1901,"saved":false}
{"ts":1375462839436,"patch":[[{"diffs":[[0,"   int m"],[-1,"in"],[1,"ax"],[0,"V = A[0]"]],"start1":1259,"start2":1259,"length1":18,"length2":18},{"diffs":[[0,"      \r\n        "],[-1,"int "],[0,"maxV = A[k];\r\n  "]],"start1":1525,"start2":1525,"length1":36,"length2":32}]],"length":1897,"saved":false}
{"ts":1375462847790,"patch":[[{"diffs":[[0,"[k] "],[-1,"< min"],[1,"> max"],[0,"V) m"],[-1,"in"],[1,"ax"],[0,"V = "]],"start1":1378,"start2":1378,"length1":19,"length2":19}]],"length":1897,"saved":false}
{"ts":1375462854796,"patch":[[{"diffs":[[0,"return m"],[-1,"in"],[1,"ax"],[0,"V;\r\n    "]],"start1":1498,"start2":1498,"length1":18,"length2":18}]],"length":1897,"saved":false}
{"ts":1375462861560,"patch":[[{"diffs":[[0,"he m"],[-1,"inimal"],[1,"ax"],[0," one"]],"start1":1470,"start2":1470,"length1":14,"length2":10}]],"length":1893,"saved":false}
{"ts":1375462915402,"patch":[[{"diffs":[[0,"k>=n){//"],[1,"no positive one, "],[0,"return t"]],"start1":1454,"start2":1454,"length1":16,"length2":33}]],"length":1910,"saved":false}
{"ts":1375462962682,"patch":[[{"diffs":[[0,"nt sum = maxV;\r\n"],[1,"        k++;\r\n"],[0,"        while(k<"]],"start1":1577,"start2":1577,"length1":32,"length2":46}]],"length":1924,"saved":false}
{"ts":1375462964457,"patch":[[{"diffs":[[0,"\r\n        k++;\r\n"],[1,"        \r\n"],[0,"        while(k<"]],"start1":1591,"start2":1591,"length1":32,"length2":42}]],"length":1934,"saved":false}
{"contributors":[],"silentsave":false,"ts":1375483654545,"patch":[[{"diffs":[[0,"/*"],[-1,"Maximum Subarray "],[1,"N-Queens"],[0,"Mar 2"],[-1,"1"],[1,"0"],[0," '12"],[-1,"4484 / 9520\r\nFind the contiguous subarray within an array (containing at least one number) which has the largest sum.\r\n\r\nFor example, given the array [−2,1,−3,4,−1,2,1,−5,4],\r\nthe contiguous subarray [4,−1,2,1] has the largest sum = 6."],[1,"2965 / 9262\r\nThe n-queens puzzle is the problem of placing n queens on an n*n chessboard such that no two queens attack each other.\r\n\r\n\r\n\r\nGiven an integer n, return all distinct solutions to the n-queens puzzle.\r\n\r\nEach solution contains a distinct board configuration of the n-queens' placement, where 'Q' and '.' both indicate a queen and an empty space respectively.\r\n\r\nFor example,\r\nThere exist two distinct solutions to the 4-queens puzzle:\r\n\r\n[\r\n [\".Q..\",  // Solution 1\r\n  \"...Q\",\r\n  \"Q...\",\r\n  \"..Q.\"],\r\n\r\n [\"..Q.\",  // Solution 2\r\n  \"Q...\",\r\n  \"...Q\",\r\n  \".Q..\"]\r\n]"],[0,"\r\n\r\n"]],"start1":0,"start2":0,"length1":268,"length2":599},{"diffs":[[0,"te: 08/0"],[-1,"1"],[1,"2"],[0,"/2013\r\n*"]],"start1":636,"start2":636,"length1":17,"length2":17},{"diffs":[[0,"    "],[-1,"int maxSubArray(int A[], "],[1,"vector<vector<string> > solveNQueens("],[0,"int "]],"start1":1373,"start2":1373,"length1":33,"length2":45},{"diffs":[[0,"    "],[-1,"if(n<=0) return 0;\r\n        \r\n        //find the first positive one\r\n        int maxV = A[0];\r\n        \r\n        int k=0;\r\n        while(k<n){\r\n            if(A[k] > 0) break;\r\n            if(A[k] > maxV) maxV = A[k];\r\n            k++;\r\n        }\r\n        \r\n        if(k>=n){//no positive one, return the max one\r\n            return maxV;\r\n        }\r\n        \r\n        maxV = A[k];\r\n        int sum = maxV;\r\n        k++;\r\n        \r\n        while(k<n){\r\n            sum += A[k];\r\n            if(sum > maxV){\r\n                maxV = sum;\r\n            }\r\n            \r\n            if(sum < 0){\r\n                sum = 0;\r\n            }\r\n            k++;\r\n        }\r\n        return maxV;"],[1,""],[0,"\r\n  "]],"start1":1524,"start2":1524,"length1":690,"length2":8}]],"length":1595,"saved":false}
{"ts":1375483690567,"patch":[[{"diffs":[[0,"        "],[1,"vector<vector<string> > A;\r\n        if(n==0) return A;"],[0,"\r\n    }\r"]],"start1":1520,"start2":1520,"length1":16,"length2":70}]],"length":1649,"saved":false}
{"ts":1375483695737,"patch":[[{"diffs":[[0,"=0) "],[-1,"return A;"],[1,"{\r\n            return A;\r\n        }"],[0,"\r\n  "]],"start1":1569,"start2":1569,"length1":17,"length2":43}]],"length":1675,"saved":false}
{"ts":1375483696939,"patch":[[{"diffs":[[0,"if(n==0) {\r\n"],[1,"            \r\n"],[0,"            "]],"start1":1564,"start2":1564,"length1":24,"length2":38}]],"length":1689,"saved":false}
{"ts":1375483710222,"patch":[[{"diffs":[[0,"        "],[1,"vector<string> t;\r\n            t.push_back(\"\");"],[0,"\r\n      "]],"start1":1580,"start2":1580,"length1":16,"length2":63}]],"length":1736,"saved":false}
{"ts":1375483719071,"patch":[[{"diffs":[[0,"k(\"\");\r\n"],[1,"            A.push_back(t);\r\n"],[0,"        "]],"start1":1629,"start2":1629,"length1":16,"length2":45}]],"length":1765,"saved":false}
{"ts":1375483723469,"patch":[[{"diffs":[[0,"     }\r\n"],[1,"        \r\n        \r\n"],[0,"    }\r\n}"]],"start1":1692,"start2":1692,"length1":16,"length2":36}]],"length":1785,"saved":false}
{"ts":1375483730447,"patch":[[{"diffs":[[0,"  \r\n        "],[1,"for(int i=0;i<n;i++){\r\n            \r\n        }"],[0,"\r\n    }\r\n};\r"]],"start1":1706,"start2":1706,"length1":24,"length2":70}]],"length":1831,"saved":false}
{"ts":1375483736887,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"for(int j=0;j<n;j++){\r\n                \r\n            }"],[0,"\r\n        }\r\n   "]],"start1":1737,"start2":1737,"length1":32,"length2":86}]],"length":1885,"saved":false}
{"ts":1375483741996,"patch":[[{"diffs":[[0,";i<n;i++){\r\n"],[1,"            \r\n"],[0,"            "]],"start1":1729,"start2":1729,"length1":24,"length2":38}]],"length":1899,"saved":false}
{"ts":1375483761688,"patch":[[{"diffs":[[0,"   }\r\n        \r\n"],[1,"        vector<int> B;\r\n        B.resize(n);\r\n        \r\n"],[0,"        for(int "]],"start1":1694,"start2":1694,"length1":32,"length2":88}]],"length":1955,"saved":false}
{"ts":1375483786152,"patch":[[{"diffs":[[0,";i++){\r\n"],[-1,"            \r\n"],[0,"        "]],"start1":1789,"start2":1789,"length1":30,"length2":16},{"diffs":[[0,"                "],[1,"B[i] = i;"],[0,"\r\n            }\r"]],"start1":1832,"start2":1832,"length1":32,"length2":41}]],"length":1950,"saved":false}
{"ts":1375483790781,"patch":[[{"diffs":[[0,"] = i;\r\n"],[1,"                \r\n"],[0,"        "]],"start1":1851,"start2":1851,"length1":16,"length2":34}]],"length":1968,"saved":false}
{"ts":1375483797172,"patch":[[{"diffs":[[0," B[i] = "],[-1,"i"],[1,"j"],[0,";\r\n     "]],"start1":1847,"start2":1847,"length1":17,"length2":17}]],"length":1968,"saved":false}
{"ts":1375484043602,"patch":[[{"diffs":[[0,"   }\r\n        \r\n"],[1,"        solveNQueensRec()\r\n"],[0,"        vector<i"]],"start1":1694,"start2":1694,"length1":32,"length2":59}]],"length":1995,"saved":false}
{"ts":1375484046168,"patch":[[{"diffs":[[0,"sRec()\r\n"],[1,"        \r\n"],[0,"        "]],"start1":1729,"start2":1729,"length1":16,"length2":26}]],"length":2005,"saved":false}
{"ts":1375484101369,"patch":[[{"diffs":[[0,"  \r\n"],[-1,"        solveNQueensRec()\r\n"],[0,"    "]],"start1":1706,"start2":1706,"length1":35,"length2":8}]],"length":1978,"saved":false}
{"ts":1375484103309,"patch":[[{"diffs":[[0,"      \r\n"],[-1,"        \r\n"],[0,"        "]],"start1":1702,"start2":1702,"length1":26,"length2":16}]],"length":1968,"saved":false}
{"ts":1375484246751,"patch":[[{"diffs":[[0,";i<n;i++){\r\n"],[1,"            \r\n        }\r\n        \r\n        for(int i=0;i<n;i++){\r\n"],[0,"            "]],"start1":1785,"start2":1785,"length1":24,"length2":90}]],"length":2034,"saved":false}
{"ts":1375484253480,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"B[i] = i;"],[0,"\r\n        }\r\n   "]],"start1":1793,"start2":1793,"length1":32,"length2":41}]],"length":2043,"saved":false}
{"ts":1375484275345,"patch":[[{"diffs":[[0,"   }\r\n        \r\n"],[1,"        //generate all the permutations\r\n        \r\n"],[0,"        for(int "]],"start1":1825,"start2":1825,"length1":32,"length2":83}]],"length":2094,"saved":false}
{"ts":1375484350904,"patch":[[{"diffs":[[0,"ublic:\r\n"],[1,"    void swap(vector<int> A, int i, int j){\r\n        \r\n    }\r\n    \r\n"],[0,"    vect"]],"start1":1365,"start2":1365,"length1":16,"length2":84}]],"length":2162,"saved":false}
{"ts":1375484374560,"patch":[[{"diffs":[[0,"){\r\n        "],[1,"int t = A[i];\r\n        A[i] = A[j];\r\n        A[j] = t;"],[0,"\r\n    }\r\n   "]],"start1":1414,"start2":1414,"length1":24,"length2":78}]],"length":2216,"saved":false}
{"ts":1375484381850,"patch":[[{"diffs":[[0,"or<int> "],[1,"&"],[0,"A, int i"]],"start1":1391,"start2":1391,"length1":16,"length2":17}]],"length":2217,"saved":false}
{"ts":1375484673352,"patch":[[{"diffs":[[0,"   }\r\n    \r\n"],[1,"    void Permutation(vector<int> A)\r\n    \r\n"],[0,"    vector<v"]],"start1":1484,"start2":1484,"length1":24,"length2":67}]],"length":2260,"saved":false}
{"ts":1375484676160,"patch":[[{"diffs":[[0,"or<int> "],[1,"&"],[0,"A)\r\n    "]],"start1":1521,"start2":1521,"length1":16,"length2":17}]],"length":2261,"saved":false}
{"ts":1375484704026,"patch":[[{"diffs":[[0,"ations\r\n"],[1,"        Permutation(A, k)\r\n"],[0,"        "]],"start1":2041,"start2":2041,"length1":16,"length2":43}]],"length":2288,"saved":false}
{"ts":1375484750442,"patch":[[{"diffs":[[0,"ations\r\n"],[1,"        for(int i=0;i<n;k++){\r\n    "],[0,"        "]],"start1":2041,"start2":2041,"length1":16,"length2":51},{"diffs":[[0,"(A, "],[-1,"k)"],[1,"i);\r\n        }"],[0,"\r\n  "]],"start1":2103,"start2":2103,"length1":10,"length2":22}]],"length":2335,"saved":false}
{"ts":1375484756284,"patch":[[{"diffs":[[0,"    "],[-1,"for(int i=0;i<n;i++){\r\n            for(int j=0;j<n;j++){\r\n                B[i] = j;\r\n                \r\n            }\r\n        }"],[0,"\r\n  "]],"start1":2137,"start2":2137,"length1":135,"length2":8}]],"length":2208,"saved":false}
{"ts":1375484762885,"patch":[[{"diffs":[[0,"<int> &A"],[-1,")"],[1,", int i){\r\n        \r\n    }"],[0,"\r\n    \r\n"]],"start1":1523,"start2":1523,"length1":17,"length2":42}]],"length":2233,"saved":false}
{"ts":1375484813709,"patch":[[{"diffs":[[0,"&A, int "],[-1,"i"],[1,"k"],[0,"){\r\n    "]],"start1":1529,"start2":1529,"length1":17,"length2":17}]],"length":2233,"saved":false}
{"ts":1375484859575,"patch":[[{"diffs":[[0,"ion(A, i"],[1,", "],[0,");\r\n    "]],"start1":2125,"start2":2125,"length1":16,"length2":18}]],"length":2235,"saved":false}
{"ts":1375484861756,"patch":[[{"diffs":[[0,"ion(A, i"],[-1,", "],[0,");\r\n    "]],"start1":2125,"start2":2125,"length1":18,"length2":16}]],"length":2233,"saved":false}
{"ts":1375484899241,"patch":[[{"diffs":[[0,"A, int k"],[1,", vector<vector<string> > &R"],[0,"){\r\n    "]],"start1":1530,"start2":1530,"length1":16,"length2":44}]],"length":2261,"saved":false}
{"ts":1375484921038,"patch":[[{"diffs":[[0,"utation("],[-1,"A"],[1,"B"],[0,", i"],[1,", A"],[0,");\r\n    "]],"start1":2149,"start2":2149,"length1":20,"length2":23}]],"length":2264,"saved":false}
{"ts":1375484935114,"patch":[[{"diffs":[[0,"ring> > "],[-1,"A"],[1,"R"],[0,";\r\n     "]],"start1":1764,"start2":1764,"length1":17,"length2":17},{"diffs":[[0,"        "],[-1,"A"],[1,"R"],[0,".push_ba"]],"start1":1861,"start2":1861,"length1":17,"length2":17},{"diffs":[[0," return "],[-1,"A"],[1,"R"],[0,";\r\n     "]],"start1":1897,"start2":1897,"length1":17,"length2":17},{"diffs":[[0,"or<int> "],[-1,"B"],[1,"A"],[0,";\r\n     "]],"start1":1942,"start2":1942,"length1":17,"length2":17},{"diffs":[[0,"        "],[-1,"B"],[1,"A"],[0,".resize("]],"start1":1954,"start2":1954,"length1":17,"length2":17},{"diffs":[[0,"        "],[-1,"B"],[1,"A"],[0,"[i] = i;"]],"start1":2021,"start2":2021,"length1":17,"length2":17},{"diffs":[[0,"ion("],[-1,"B"],[1,"A"],[0,", i, "],[-1,"A"],[1,"R"],[0,");\r\n"]],"start1":2153,"start2":2153,"length1":15,"length2":15}]],"length":2264,"saved":false}
{"ts":1375484946112,"patch":[[{"diffs":[[0,"      \r\n"],[-1,"        \r\n"],[0,"    }\r\n}"]],"start1":2181,"start2":2181,"length1":26,"length2":16}]],"length":2254,"saved":false}
{"ts":1375484948991,"patch":[[{"diffs":[[0,"\r\n        \r\n"],[1,"        \r\n"],[0,"    }\r\n};\r\n\r"]],"start1":2177,"start2":2177,"length1":24,"length2":34}]],"length":2264,"saved":false}
{"ts":1375484951725,"patch":[[{"diffs":[[0,"      \r\n        "],[1,"return R;"],[0,"\r\n    }\r\n};\r\n\r\nv"]],"start1":2181,"start2":2181,"length1":32,"length2":41}]],"length":2273,"saved":false}
{"ts":1375484970867,"patch":[[{"diffs":[[0,"){\r\n        "],[1,"if(k==A.size()-1){\r\n            \r\n        }"],[0,"\r\n    }\r\n   "]],"start1":1566,"start2":1566,"length1":24,"length2":67}]],"length":2316,"saved":false}
{"ts":1375484975586,"patch":[[{"diffs":[[0,"    "],[-1,"if(k==A.size()-1){\r\n            \r\n        }"],[0,"\r\n  "]],"start1":1574,"start2":1574,"length1":51,"length2":8}]],"length":2273,"saved":false}
{"ts":1375484976310,"patch":[[{"diffs":[[0,"\r\n        \r\n"],[1,"        \r\n"],[0,"    }\r\n    \r"]],"start1":1568,"start2":1568,"length1":24,"length2":34}]],"length":2283,"saved":false}
{"ts":1375484983033,"patch":[[{"diffs":[[0,"   }\r\n    \r\n"],[1,"    \r\n"],[0,"    void Per"]],"start1":1484,"start2":1484,"length1":24,"length2":30}]],"length":2289,"saved":false}
{"ts":1375484983903,"patch":[[{"diffs":[[0,"    \r\n    \r\n"],[1,"    \r\n"],[0,"    void Per"]],"start1":1490,"start2":1490,"length1":24,"length2":30}]],"length":2295,"saved":false}
{"ts":1375484996888,"patch":[[{"diffs":[[0,"\r\n    \r\n    "],[1,"string getMap(vector<int> &A)"],[0,"\r\n    \r\n    "]],"start1":1488,"start2":1488,"length1":24,"length2":53}]],"length":2324,"saved":false}
{"ts":1375485001322,"patch":[[{"diffs":[[0,"int> &A)"],[1,"{\r\n        \r\n    }"],[0,"\r\n    \r\n"]],"start1":1521,"start2":1521,"length1":16,"length2":34}]],"length":2342,"saved":false}
{"ts":1375485010212,"patch":[[{"diffs":[[0,"> &A){\r\n        "],[1,"string s;\r\n        return s;"],[0,"\r\n    }\r\n    \r\n "]],"start1":1524,"start2":1524,"length1":32,"length2":60}]],"length":2370,"saved":false}
{"ts":1375485086626,"patch":[[{"diffs":[[0,"> &R){\r\n        "],[1,"if(k==0){\r\n            \r\n        }"],[0,"\r\n        \r\n    "]],"start1":1649,"start2":1649,"length1":32,"length2":66}]],"length":2404,"saved":false}
{"ts":1375485201985,"patch":[[{"diffs":[[0,"    "],[-1,"if(k==0){"],[0,"\r\n  "]],"start1":1661,"start2":1661,"length1":17,"length2":8},{"diffs":[[0,"    "],[-1,"    \r\n        }"],[0,"\r\n  "]],"start1":1671,"start2":1671,"length1":23,"length2":8}]],"length":2380,"saved":false}
{"ts":1375485224164,"patch":[[{"diffs":[[0,"){\r\n        "],[-1,"\r\n        "],[1,"int n=A.size();\r\n        for(int i=k;i<n;i++){\r\n            \r\n        }"],[0,"\r\n        \r\n"]],"start1":1653,"start2":1653,"length1":34,"length2":95}]],"length":2441,"saved":false}
{"ts":1375485240714,"patch":[[{"diffs":[[0,"(int i=k"],[1,"+1"],[0,";i<n;i++"]],"start1":1693,"start2":1693,"length1":16,"length2":18},{"diffs":[[0,"){\r\n            "],[1,"swap(A,k,)"],[0,"\r\n        }\r\n   "]],"start1":1711,"start2":1711,"length1":32,"length2":42}]],"length":2453,"saved":false}
{"ts":1375485249820,"patch":[[{"diffs":[[0,"wap(A,k,"],[-1,")"],[1,"i);"],[0,"\r\n      "]],"start1":1728,"start2":1728,"length1":17,"length2":19}]],"length":2455,"saved":false}
{"ts":1375485259573,"patch":[[{"diffs":[[0,"ap(A,k,i);\r\n"],[1,"            swap(A,k,i);//swap back\r\n"],[0,"        }\r\n "]],"start1":1729,"start2":1729,"length1":24,"length2":61}]],"length":2492,"saved":false}
{"ts":1375485260422,"patch":[[{"diffs":[[0,"ap(A,k,i);\r\n"],[1,"            \r\n"],[0,"            "]],"start1":1729,"start2":1729,"length1":24,"length2":38}]],"length":2506,"saved":false}
{"ts":1375485273195,"patch":[[{"diffs":[[0,"ap(A,k,i);\r\n"],[1,"            //check A\r\n            \r\n"],[0,"            "]],"start1":1729,"start2":1729,"length1":24,"length2":61}]],"length":2543,"saved":false}
{"ts":1375485293795,"patch":[[{"diffs":[[0," A\r\n            "],[1,"Check(A);"],[0,"\r\n            \r\n"]],"start1":1760,"start2":1760,"length1":32,"length2":41}]],"length":2552,"saved":false}
{"ts":1375485308080,"patch":[[{"diffs":[[0,"   }\r\n    \r\n"],[1,"    void Check(vector<int> &A){\r\n        \r\n    }\r\n    \r\n"],[0,"    void Per"]],"start1":1571,"start2":1571,"length1":24,"length2":80}]],"length":2608,"saved":false}
{"ts":1375485315247,"patch":[[{"diffs":[[0,"ctor<int> &A){\r\n"],[1,"        int n=A.size();\r\n        \r\n"],[0,"        \r\n    }\r"]],"start1":1600,"start2":1600,"length1":32,"length2":67}]],"length":2643,"saved":false}
{"ts":1375485323958,"patch":[[{"diffs":[[0,"k(vector<int> &A"],[1,", int k"],[0,"){\r\n        int "]],"start1":1596,"start2":1596,"length1":32,"length2":39}]],"length":2650,"saved":false}
{"ts":1375485330726,"patch":[[{"diffs":[[0," Check(A"],[1,", k"],[0,");\r\n    "]],"start1":1873,"start2":1873,"length1":16,"length2":19}]],"length":2653,"saved":false}
{"ts":1375485349612,"patch":[[{"diffs":[[0,"A, int k){\r\n"],[1,"        if(k==0) return true;\r\n"],[0,"        int "]],"start1":1611,"start2":1611,"length1":24,"length2":55}]],"length":2684,"saved":false}
{"ts":1375485352839,"patch":[[{"diffs":[[0,"  \r\n    "],[-1,"void"],[1,"bool"],[0," Check(v"]],"start1":1579,"start2":1579,"length1":20,"length2":20}]],"length":2684,"saved":false}
{"ts":1375485354499,"patch":[[{"diffs":[[0," true;\r\n"],[1,"        \r\n"],[0,"        "]],"start1":1646,"start2":1646,"length1":16,"length2":26}]],"length":2694,"saved":false}
{"ts":1375485370354,"patch":[[{"diffs":[[0,"        "],[1,"if("],[0,"Check(A,"]],"start1":1907,"start2":1907,"length1":16,"length2":19},{"diffs":[[0,"ck(A, k)"],[-1,";"],[1,"){\r\n                \r\n            }"],[0,"\r\n      "]],"start1":1921,"start2":1921,"length1":17,"length2":51}]],"length":2731,"saved":false}
{"ts":1375485537800,"patch":[[{"diffs":[[0,"                "],[1,"Permutation(A, k+1, )"],[0,"\r\n            }\r"]],"start1":1933,"start2":1933,"length1":32,"length2":53}]],"length":2752,"saved":false}
{"ts":1375485539169,"patch":[[{"diffs":[[0,"A, k+1, "],[1,"R"],[0,")\r\n     "]],"start1":1961,"start2":1961,"length1":16,"length2":17}]],"length":2753,"saved":false}
{"ts":1375485540826,"patch":[[{"diffs":[[0," k+1, R)"],[1,";"],[0,"\r\n      "]],"start1":1963,"start2":1963,"length1":16,"length2":17}]],"length":2754,"saved":false}
{"ts":1375485550490,"patch":[[{"diffs":[[0,"\n        }\r\n"],[-1,"        \r\n"],[0,"    }\r\n    \r"]],"start1":2039,"start2":2039,"length1":34,"length2":24}]],"length":2744,"saved":false}
{"ts":1375485605881,"patch":[[{"diffs":[[0,"ck(A, k)){\r\n"],[1,"                if(k==n-1){\r\n                    \r\n                }else{\r\n    "],[0,"            "]],"start1":1921,"start2":1921,"length1":24,"length2":103},{"diffs":[[0,", k+1, R);\r\n"],[1,"                }\r\n"],[0,"            "]],"start1":2041,"start2":2041,"length1":24,"length2":43}]],"length":2842,"saved":false}
{"ts":1375485608820,"patch":[[{"diffs":[[0,"                "],[1,"   "],[0,"\r\n              "]],"start1":1966,"start2":1966,"length1":32,"length2":35}]],"length":2845,"saved":false}
{"ts":1375485634850,"patch":[[{"diffs":[[0,"){\r\n"],[-1,"                if(k==n-1){\r\n                       \r\n                }else{\r\n    "],[0,"    "]],"start1":1929,"start2":1929,"length1":90,"length2":8},{"diffs":[[0,");\r\n"],[-1,"                }\r\n"],[0,"    "]],"start1":1970,"start2":1970,"length1":27,"length2":8}]],"length":2744,"saved":false}
{"ts":1375485643273,"patch":[[{"diffs":[[0,"nt n=A.size();\r\n"],[1,"        \r\n        if(k==n-1){\r\n            \r\n        }\r\n        \r\n"],[0,"        for(int "]],"start1":1805,"start2":1805,"length1":32,"length2":98}]],"length":2810,"saved":false}
{"ts":1375485645791,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"return;"],[0,"\r\n        }\r\n   "]],"start1":1848,"start2":1848,"length1":32,"length2":39}]],"length":2817,"saved":false}
{"ts":1375485648330,"patch":[[{"diffs":[[0,"f(k==n-1){\r\n"],[1,"            \r\n"],[0,"            "]],"start1":1840,"start2":1840,"length1":24,"length2":38}]],"length":2831,"saved":false}
{"ts":1375485655298,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"Check(A, n-1);"],[0,"\r\n            re"]],"start1":1848,"start2":1848,"length1":32,"length2":46}]],"length":2845,"saved":false}
{"ts":1375485667629,"patch":[[{"diffs":[[0,"        "],[1,"if("],[0,"Check(A,"]],"start1":1856,"start2":1856,"length1":16,"length2":19},{"diffs":[[0,"(A, "],[-1,"n-1);"],[1,"k)){\r\n                \r\n            }"],[0,"\r\n  "]],"start1":1872,"start2":1872,"length1":13,"length2":45}]],"length":2880,"saved":false}
{"ts":1375485676469,"patch":[[{"diffs":[[0,"  \r\n    "],[1,"vector<"],[0,"string"],[1,">"],[0," getMap("]],"start1":1492,"start2":1492,"length1":22,"length2":30}]],"length":2888,"saved":false}
{"ts":1375485682239,"patch":[[{"diffs":[[0,"                "],[1,"R.push_back()"],[0,"\r\n            }\r"]],"start1":1890,"start2":1890,"length1":32,"length2":45}]],"length":2901,"saved":false}
{"ts":1375485686490,"patch":[[{"diffs":[[0,"sh_back("],[1,"getMap(A)"],[0,")\r\n     "]],"start1":1910,"start2":1910,"length1":16,"length2":25}]],"length":2910,"saved":false}
{"ts":1375485687641,"patch":[[{"diffs":[[0,"tMap(A))"],[1,";"],[0,"\r\n      "]],"start1":1920,"start2":1920,"length1":16,"length2":17}]],"length":2911,"saved":false}
{"ts":1375485691915,"patch":[[{"diffs":[[0,"string s"],[1," = \"\""],[0,";\r\n     "]],"start1":1548,"start2":1548,"length1":16,"length2":21}]],"length":2916,"saved":false}
{"ts":1375485714122,"patch":[[{"diffs":[[0,"n s;\r\n\r\n"],[1,"    vector<vector<string> >\r\n \r\n"],[0,"\tsystem("]],"start1":2886,"start2":2886,"length1":16,"length2":48}]],"length":2948,"saved":false}
{"ts":1375485719657,"patch":[[{"diffs":[[0,"tring> >"],[1," R = s."],[0,"\r\n \r\n\tsy"]],"start1":2913,"start2":2913,"length1":16,"length2":23}]],"length":2955,"saved":false}
{"ts":1375485732962,"patch":[[{"diffs":[[0,"> R = s."],[1,"solveNQueens(1);\r\n    "],[0,"\r\n \r\n\tsy"]],"start1":2920,"start2":2920,"length1":16,"length2":38}]],"length":2977,"saved":false}
{"ts":1375485744702,"patch":[[{"diffs":[[0,");\r\n    "],[1,"for(int i=0;i<R.size();i++){\r\n        \r\n    }"],[0,"\r\n \r\n\tsy"]],"start1":2942,"start2":2942,"length1":16,"length2":61}]],"length":3022,"saved":false}
{"ts":1375485757713,"patch":[[{"diffs":[[0,"R.size();i++){\r\n"],[1,"        vector<string> M = R[i];\r\n"],[0,"        \r\n    }\r"]],"start1":2964,"start2":2964,"length1":32,"length2":66}]],"length":3056,"saved":false}
{"ts":1375485767020,"patch":[[{"diffs":[[0," R[i];\r\n        "],[1,"for(int j=0;j<M.size();j++){\r\n            \r\n        }"],[0,"\r\n    }\r\n \r\n\tsys"]],"start1":3006,"start2":3006,"length1":32,"length2":85}]],"length":3109,"saved":false}
{"ts":1375485777636,"patch":[[{"diffs":[[0,"        "],[-1,"\r\n        }"],[1,"cout << string << endl;\r\n        }\r\n        cout << endl;"],[0,"\r\n    }\r"]],"start1":3056,"start2":3056,"length1":27,"length2":73}]],"length":3155,"saved":false}
{"ts":1375485816610,"patch":[[{"diffs":[[0," = \"\";\r\n"],[1,"        \r\n"],[0,"        "]],"start1":1556,"start2":1556,"length1":16,"length2":26}]],"length":3165,"saved":false}
{"ts":1375485822856,"patch":[[{"diffs":[[0,"<int> &A){\r\n"],[1,"        vector<string> M;\r\n        \r\n"],[0,"        stri"]],"start1":1528,"start2":1528,"length1":24,"length2":61}]],"length":3202,"saved":false}
{"ts":1375485840271,"patch":[[{"diffs":[[0,"ng> M;\r\n        "],[1,"int n = A.size();\r\n        \r\n        for(int i=0;i<A.size())"],[0,"\r\n        string"]],"start1":1559,"start2":1559,"length1":32,"length2":92}]],"length":3262,"saved":false}
{"ts":1375485847802,"patch":[[{"diffs":[[0,"0;i<"],[-1,"A.size())"],[1,"n;i++){\r\n            \r\n        }\r\n        "],[0,"\r\n  "]],"start1":1622,"start2":1622,"length1":17,"length2":50}]],"length":3295,"saved":false}
{"ts":1375485849384,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"    "],[0,"\r\n        }\r\n   "]],"start1":1631,"start2":1631,"length1":32,"length2":36}]],"length":3299,"saved":false}
{"ts":1375485852912,"patch":[[{"diffs":[[0," n = A.size();\r\n"],[1,"        string s = \"\";\r\n"],[0,"        \r\n      "]],"start1":1578,"start2":1578,"length1":32,"length2":56},{"diffs":[[0,"  \r\n        "],[-1,"string s = \"\";"],[0,"\r\n        \r\n"]],"start1":1694,"start2":1694,"length1":38,"length2":24}]],"length":3309,"saved":false}
{"ts":1375485873090,"patch":[[{"diffs":[[0," = \"\";\r\n"],[1,"        s.resize(n, '.');\r\n"],[0,"        "]],"start1":1610,"start2":1610,"length1":16,"length2":43}]],"length":3336,"saved":false}
{"ts":1375485878521,"patch":[[{"diffs":[[0,"      \r\n"],[-1,"        \r\n        \r\n"],[0,"        "]],"start1":1717,"start2":1717,"length1":36,"length2":16}]],"length":3316,"saved":false}
{"ts":1375485880205,"patch":[[{"diffs":[[0,"                "],[1,"   "],[0,"\r\n        }\r\n   "]],"start1":1686,"start2":1686,"length1":32,"length2":35}]],"length":3319,"saved":false}
{"ts":1375485896314,"patch":[[{"diffs":[[0,"n;i++){\r\n       "],[1,"     string t = s;\r\n"],[0,"            \r\n  "]],"start1":1677,"start2":1677,"length1":32,"length2":52}]],"length":3339,"saved":false}
{"ts":1375485917279,"patch":[[{"diffs":[[0,"s;\r\n            "],[1,"s[A[i]] = 'Q';\r\n            A.push_back(t);"],[0,"\r\n        }\r\n   "]],"start1":1709,"start2":1709,"length1":32,"length2":75}]],"length":3382,"saved":false}
{"ts":1375485921896,"patch":[[{"diffs":[[0," return "],[-1,"s"],[1,"M"],[0,";\r\n    }"]],"start1":1798,"start2":1798,"length1":17,"length2":17}]],"length":3382,"saved":false}
{"ts":1375486008187,"patch":[[{"diffs":[[0,"    if(k"],[-1,"="],[1,"<"],[0,"=0) retu"]],"start1":1867,"start2":1867,"length1":17,"length2":17},{"diffs":[[0,"  \r\n        "],[1,"for(int i=0;i<k;i++){\r\n            \r\n        }"],[0,"\r\n    }\r\n   "]],"start1":1935,"start2":1935,"length1":24,"length2":70}]],"length":3428,"saved":false}
{"ts":1375486016559,"patch":[[{"diffs":[[0,"   \r\n        }\r\n"],[1,"        return true;\r\n"],[0,"    }\r\n    \r\n   "]],"start1":1979,"start2":1979,"length1":32,"length2":54}]],"length":3450,"saved":false}
{"ts":1375486039896,"patch":[[{"diffs":[[0,"){\r\n            "],[1,"if(A[k] == A[i]) return false;"],[0,"\r\n        }\r\n   "]],"start1":1966,"start2":1966,"length1":32,"length2":62}]],"length":3480,"saved":false}
{"ts":1375486041784,"patch":[[{"diffs":[[0,"urn false;\r\n"],[1,"            if(A[k] == A[i]) return false;\r\n"],[0,"        }\r\n "]],"start1":2002,"start2":2002,"length1":24,"length2":68}]],"length":3524,"saved":false}
{"ts":1375486141967,"patch":[[{"diffs":[[0,"         if("],[-1,"A[k] == A[i]"],[1,"abs(A[k]-A[i]) == abs(k-i)"],[0,") return fal"]],"start1":2017,"start2":2017,"length1":36,"length2":50}]],"length":3538,"saved":false}
