{"ts":1375483491797,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*Permutation SequenceMar 28 '123090 / 10604\r\nThe set [1,2,3,ï¿½,n] contains a total of n! unique permutations.\r\n\r\nBy listing and labeling all of the permutations in order,\r\nWe get the following sequence (ie, for n = 3):\r\n\r\n\"123\"\r\n\"132\"\r\n\"213\"\r\n\"231\"\r\n\"312\"\r\n\"321\"\r\nGiven n and k, return the kth permutation sequence.\r\n\r\nNote: Given n will be between 1 and 9 inclusive.\r\n\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 07/31/2013\r\n*/\r\n\r\n#include<iostream>\r\nusing namespace std;\r\n#include<climits>\r\n\r\n#include<vector>\r\n#include<string>\r\n#include<algorithm>\r\n\r\n#include<map>\r\n//#include<unordered_set>\r\n\r\n#include<queue>\r\n#include<set>\r\n\r\n// Definition for binary tree\r\n struct TreeNode {\r\n     int val;\r\n     TreeNode *left;\r\n     TreeNode *right;\r\n TreeNode(int x) : val(x), left(NULL), right(NULL) {}\r\n};\r\n \r\n\r\n//Definition for singly-linked list.\r\nstruct ListNode {\r\n    int val;\r\n    ListNode *next;\r\n    ListNode(int x) : val(x), next(NULL) {}\r\n};\r\n\r\nclass Solution {\r\npublic:\r\n    string getPermutation(int n, int k) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n\t\tstring R;\r\n        string A;\r\n\t\tfor(int i=1;i<=n;i++){\r\n\t\t\tA.push_back('0' + i);\r\n\t\t}\r\n\r\n\t\tlong L = 1;\r\n\t\tfor(int i=1;i<n;i++){\r\n\t\t\tL *= i;\r\n\t\t}\r\n\r\n\t\tint m = n-1;\r\n\t\twhile(m >= 1){\r\n\t\t\tint j = k/L + ((k%L==0)?0:1) - 1;\r\n\t\t\tR.push_back(A[j]);\r\n\t\t\tA.erase(A.begin() + j);\r\n\t\t\tk = (k%L == 0) ? L : (k%L);\r\n\t\t\tL /= m;\r\n\t\t\tm--;\r\n\t\t}\r\n\r\n\t\t//last one\r\n\t\tR.push_back(A[0]);\r\n\t\treturn R;\r\n    }\r\n};\r\n\r\nvoid main(){\r\n\tSolution s;\r\n\r\n\tcout << s.getPermutation(3,1) << endl;\r\n\tcout << s.getPermutation(3,2) << endl;\r\n\tcout << s.getPermutation(3,3) << endl;\r\n\tcout << s.getPermutation(3,4) << endl;\r\n\tcout << s.getPermutation(3,5) << endl;\r\n\tcout << s.getPermutation(3,6) << endl;\r\n\tsystem(\"pause\");\r\n}\r\n"]],"start1":0,"start2":0,"length1":0,"length2":1807}]],"length":1807}
