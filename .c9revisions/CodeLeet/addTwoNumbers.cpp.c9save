{"ts":1375818841545,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"/*\r\nAdd Two Numbers\r\nYou are given two linked lists representing two non-negative numbers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.\r\n\r\nInput: (2 -> 4 -> 3) + (5 -> 6 -> 4)\r\nOutput: 7 -> 0 -> 8\r\n\r\nAuthor: Wencan Luo\r\nLanguage: C++\r\nDate: 08/30/2012\r\n*/\r\n#include<iostream>\r\n\r\nusing namespace std;\r\n\r\n// Definition for singly-linked list.\r\nstruct ListNode {\r\n    int val;\r\n    ListNode *next;\r\n    ListNode(int x) : val(x), next(NULL) {}\r\n};\r\n\r\nclass Solution {\r\npublic:\r\n    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2) {\r\n        // Start typing your C/C++ solution below\r\n        // DO NOT write int main() function\r\n        ListNode *res = NULL;\r\n\t\r\n\t\t//add one by one\r\n\t\tListNode *p1=l1, *p2=l2, *p;\r\n\r\n\t\tint flag = 0;\r\n\t\twhile(p1 != NULL && p2 != NULL)\r\n\t\t{\r\n\t\t\tint sum = p1->val + p2->val + flag;\r\n\t\t\tif(res == NULL)//first time\r\n\t\t\t{\r\n\t\t\t\tif(sum >= 10)\r\n\t\t\t\t{\r\n\t\t\t\t\tres = new ListNode(sum - 10);\r\n\t\t\t\t\tflag = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tres = new ListNode(sum);\r\n\t\t\t\t\tflag = 0;\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tp = res;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tif(sum >= 10)\r\n\t\t\t\t{\r\n\t\t\t\t\tp->next = new ListNode(sum - 10);\r\n\t\t\t\t\tflag = 1;\r\n\t\t\t\t}\r\n\t\t\t\telse\r\n\t\t\t\t{\r\n\t\t\t\t\tp->next = new ListNode(sum);\r\n\t\t\t\t\tflag = 0;\r\n\t\t\t\t}\r\n\t\t\t\tp = p->next;\r\n\t\t\t}\r\n\r\n\t\t\tp1 = p1->next;\r\n\t\t\tp2 = p2->next;\r\n\t\t}\r\n\r\n\t\twhile(p1 != NULL)\r\n\t\t{\r\n\t\t\tint sum = p1->val + flag;\r\n\t\t\tif(sum >= 10)\r\n\t\t\t{\r\n\t\t\t\tp->next = new ListNode(sum-10);\r\n\t\t\t\tflag = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tp->next = new ListNode(sum);\r\n\t\t\t\tflag = 0;\r\n\t\t\t}\r\n\t\t\tp = p -> next;\r\n\t\t\tp1 = p1->next;\r\n\t\t}\r\n\r\n\t\twhile(p2 != NULL)\r\n\t\t{\r\n\t\t\tint sum = p2->val + flag;\r\n\t\t\tif(sum >= 10)\r\n\t\t\t{\r\n\t\t\t\tp->next = new ListNode(sum-10);\r\n\t\t\t\tflag = 1;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tp->next = new ListNode(sum);\r\n\t\t\t\tflag = 0;\r\n\t\t\t}\r\n\t\t\tp = p -> next;\r\n\t\t\tp2 = p2->next;\r\n\t\t}\r\n\r\n\t\tif(flag == 1)\r\n\t\t{\r\n\t\t\tp->next = new ListNode(1);\r\n\t\t}\r\n\r\n\t\treturn res;\r\n    }\r\n};\r\n\r\nvoid main()\r\n{\r\n\tListNode *a = new ListNode(2);\r\n\tListNode *a2 = new ListNode(4);\r\n\tListNode *a3 = new ListNode(6);\r\n\ta->next = a2;\r\n\ta2->next = a3;\r\n\r\n\tListNode *b = new ListNode(5);\r\n\tListNode *b2 = new ListNode(6);\r\n\tListNode *b3 = new ListNode(4);\r\n\tb->next = b2;\r\n\tb2->next = b3;\r\n\r\n\tSolution s;\r\n\tListNode *res = s.addTwoNumbers(a,b);\r\n\r\n\tListNode *p = res;\r\n\twhile(p != NULL)\r\n\t{\r\n\t\tcout << p->val << \", \";\r\n\t\tp = p->next;\r\n\t}\r\n\r\n\tsystem(\"pause\");\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":2429}]],"length":2429}
